
stages:
  - build
  - test
  - dockerize
  - deploy
  - release

variables:
  DEPENDENCY_DIR: build/dependency

build_api-gateway:
  stage: build
  image: gradle:8.11
  script:
    - cd spring_apps/api-gateway
    - chmod +x gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - spring_apps/api-gateway/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/api-gateway/**/*
     - services.Dockerfile

build_user-service:
  stage: build
  image: gradle:8.11
  script:
    - cd spring_apps/user-service
    - chmod +x gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - spring_apps/user-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/user-service/**/*
     - services.Dockerfile

build_garage-service:
  stage: build
  image: gradle:8.11
  script:
    - cd spring_apps/garage-service
    - chmod +x gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - spring_apps/garage-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/garage-service/**/*
     - services.Dockerfile

build_vehicle-service:
  stage: build
  image: gradle:8.11
  script:
    - cd spring_apps/vehicle-service
    - chmod +x gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - spring_apps/vehicle-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/vehicle-service/**/*
     - services.Dockerfile

build_notification-service:
  stage: build
  image: gradle:8.11
  script:
    - cd spring_apps/notification-service
    - chmod +x gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - spring_apps/notification-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/notification-service/**/*

build_recommendation-service:
  stage: build
  image: gradle:latest
  script:
    - cd spring_apps/recommendation-service
    - chmod +x gradlew
    - ./gradlew bootJar
  artifacts:
    paths:
      - spring_apps/recommendation-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/recommendation-service/**/*
     - services.Dockerfile

create_api-gateway_image:
  stage: dockerize
  script:
    - cd spring_apps/api-gateway;
    - mkdir -p ./${DEPENDENCY_DIR};
    - cd ./${DEPENDENCY_DIR};
    - jar -xf ../libs/*.jar;
    - cd ../..
    - chmod +x ./gradlew
    - VERSION=$(./gradlew -q printVersion)
    - cd;
    - cd ./**/**/**/**/my_car_specialist
    - ls -a
    - tree
    - docker build -f services.Dockerfile --build-arg APP_DIR="/spring_apps/api-gateway" --build-arg MAIN_CLASS=com.apsi_projekt.api_gateway.ApiGatewayApplication -t api-gateway:$VERSION .
  needs:
    - build_api-gateway
  only:
    refs:
      - main
    changes:
      - spring_apps/api-gateway/**/*
      - services.Dockerfile

create_user-service_image:
  stage: dockerize
  script:
    - cd spring_apps/user-service;
    - mkdir -p ./${DEPENDENCY_DIR};
    - cd ./${DEPENDENCY_DIR};
    - jar -xf ../libs/*.jar;
    - cd ../..
    - chmod +x ./gradlew
    - VERSION=$(./gradlew -q printVersion)
    - cd;
    - cd ./**/**/**/**/my_car_specialist
    - ls -a
    - docker build -f services.Dockerfile --build-arg APP_DIR="/spring_apps/user-service" --build-arg MAIN_CLASS=com.apsi_projekt.user_service.UserServiceApplication -t user-service:$VERSION .
  needs:
    - build_user-service
  only:
    refs:
      - main
    changes:
      - spring_apps/user-service/**/*
      - services.Dockerfile

create_garage-service_image:
  stage: dockerize
  script:
    - cd spring_apps/garage-service;
    - mkdir -p ./${DEPENDENCY_DIR};
    - cd ./${DEPENDENCY_DIR};
    - jar -xf ../libs/*.jar;
    - cd ../..
    - chmod +x ./gradlew
    - VERSION=$(./gradlew -q printVersion)
    - cd;
    - cd ./**/**/**/**/my_car_specialist
    - ls -a
    - docker build -f services.Dockerfile --build-arg APP_DIR="/spring_apps/garage-service" --build-arg MAIN_CLASS=com.apsi_projekt.garage_service.GarageServiceApplication -t garage-service:$VERSION .
  needs:
    - build_garage-service
  only:
    refs:
      - main
    changes:
      - spring_apps/garage-service/**/*
      - services.Dockerfile

create_vehicle-service_image:
  stage: dockerize
  script:
    - cd spring_apps/vehicle-service;
    - mkdir -p ./${DEPENDENCY_DIR};
    - cd ./${DEPENDENCY_DIR};
    - jar -xf ../libs/*.jar;
    - cd ../..
    - chmod +x ./gradlew
    - VERSION=$(./gradlew -q printVersion)
    - cd;
    - cd ./**/**/**/**/my_car_specialist
    - ls -a
    - docker build -f services.Dockerfile --build-arg APP_DIR="/spring_apps/vehicle-service" --build-arg MAIN_CLASS=com.apsi_projekt.vehicle_service.VehicleServiceApplication -t vehicle-service:$VERSION .
  needs:
    - build_vehicle-service
  only:
    refs:
      - main
    changes:
      - spring_apps/vehicle-service/**/*
      - services.Dockerfile

create_notification-service_image:
  stage: dockerize
  script:
    - cd spring_apps/notification-service;
    - mkdir -p ./${DEPENDENCY_DIR};
    - cd ./${DEPENDENCY_DIR};
    - jar -xf ../libs/*.jar;
    - cd ../..
    - chmod +x ./gradlew
    - VERSION=$(./gradlew -q printVersion)
    - cd;
    - cd ./**/**/**/**/my_car_specialist
    - ls -a
    - docker build -f services.Dockerfile --build-arg APP_DIR="/spring_apps/notification-service" --build-arg MAIN_CLASS=com.apsi_projekt.notification_service.NotificationServiceApplication -t notification-service:$VERSION .
  needs:
    - build_notification-service
  only:
    refs:
      - main
    changes:
      - spring_apps/notification-service/**/*
      - services.Dockerfile

create_recommendation-service_image:
  stage: dockerize
  script:
    - cd spring_apps/recommendation-service;
    - mkdir -p ./${DEPENDENCY_DIR};
    - cd ./${DEPENDENCY_DIR};
    - jar -xf ../libs/*.jar;
    - cd ../..
    - chmod +x ./gradlew
    - VERSION=$(./gradlew -q printVersion)
    - cd;
    - cd ./**/**/**/**/my_car_specialist
    - ls -a
    - docker build -f services.Dockerfile --build-arg APP_DIR="/spring_apps/recommendation-service" --build-arg MAIN_CLASS=com.apsi_projekt.recommendation_service.RecommendationServiceApplication -t recommendation-service:$VERSION .
  needs:
    - build_recommendation-service
  only:
    refs:
      - main
    changes:
      - spring_apps/recommendation-service/**/*
      - services.Dockerfile

deploy_services:
  stage: deploy
  script:
    - docker compose -f docker-compose.yml up -d
  only:
    refs:
      - main
    changes:
      - spring_apps/**/*
      - services.Dockerfile
      - docker-compose.yml
# dockerize:
#   stage: dockerize
#   script:
#     - tree
#     - docker compose -f docker-compose.yml build
#   dependencies:
#     - unpack_api_gateway_jar
#   only:
#     refs:
#       - main
#     changes:
#      - spring_apps/**/*
#      - ./services.Dockerfile
#      - ./docker-compose.yml

# unpack_api_gateway_jar:
#   stage: package
#   script:
#     - cd spring_apps/api-gateway;
#     - mkdir -p ./${DEPENDENCY_DIR};
#     - cd ./${DEPENDENCY_DIR};
#     - jar -xf ../libs/*.jar;
#     #- docker compose build -f docker-compose.yml
#   artifacts:
#     paths:
#       - spring_apps/api-gateway/${DEPENDENCY_DIR}/  
#     expire_in: 1 day
#   only:
#     refs:
#       - main
#     changes:
#      - spring_apps/api-gateway/**/*
#      - ./services.Dockerfile
#      - ./docker-compose.yml
