image: creatiwww/docker-compose:latest
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications


stages:
  - build
  - test
  - deploy
  - release

# image: gradle:alpine

# before_script:
#   - GRADLE_USER_HOME="$(pwd)/.gradle"
#   - export GRADLE_USER_HOME

# build:
#   stage: build
#   script: gradle --build-cache assemble
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: push
#     paths:
#       - build
#       - .gradle

# test:
#   stage: test
#   script: gradle check
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: pull
#     paths:
#       - build
#       - .gradle

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production

build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - docker build -t my_nginx_image .

test-job1:
  stage: test
  script:
    - echo "This job tests something"

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
    - docker run -d -p 8080:80 my_nginx_image
  environment: production
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest              # Run this job when a tag is created
  script:
    - echo "running release_job"
    - commit_message=$(git log -1 --pretty=%B)
    - tag_name=$(date +'%Y-%m-%d-%H-%M-%S')-"$(echo "$commit_message" | tr -s ' ' '-')"
    - release-cli create --description "Release created automatically for $CI_COMMIT_REF_NAME" --tag-name "$tag_name"
  # release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
  #   tag_name: "$tag_name"
  #   description: '$CI_COMMIT_TAG'
  only:
    - tags


