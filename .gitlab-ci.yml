#te
stages:
  - build
  - test
  - deploy
  - release


build_api-gateway:
  stage: build
  image: gradle:latest
  script:
    - cd spring_apps/api-gateway
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - spring_apps/api-gateway/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/api-gateway/**/*

build_user-service:
  stage: build
  image: gradle:latest
  script:
    - cd spring_apps/user-service
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - spring_apps/user-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/user-service/**/*

build_garage-service:
  stage: build
  image: gradle:latest
  script:
    - cd spring_apps/garage-service
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - spring_apps/garage-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/garage-service/**/*

build_vechicle-service:
  stage: build
  script:
    - cd spring_apps/vehicle-service
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - spring_apps/vehicle-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/vehicle-service/**/*


build_notification-service:
  stage: build
  image: gradle:latest
  script:
    - cd spring_apps/notification-service
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - spring_apps/notification-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/notification-service/**/*

build_recommendation-service:
  stage: build
  image: gradle:latest
  script:
    - cd spring_apps/recommendation-service
    - chmod +x gradlew
    - ./gradlew clean build
  artifacts:
    paths:
      - spring_apps/recommendation-service/build/libs/*.jar
    expire_in: 1 day
  only:
    refs:
      - main
    changes:
     - spring_apps/recommendation-service/**/*

# test-all-services:
#   stage: test
#   image: gradle:latest
#   script:
#     - gradle --versione
#     - gradle test -p /home/projekt/spring_apps/api-gateway
#     - gradle test -p /home/projekt/spring_apps/discovery-service
#     - gradle test -p /home/projekt/spring_apps/user-service
#     - gradle test -p /home/projekt/spring_apps/garage-service
#     - gradle test -p /home/projekt/spring_apps/vechicle-service
#     - gradle test -p /home/projekt/spring_apps/notification-service
#     - gradle test -p /home/projekt/spring_apps/recommendation-service
#   only:
#     - main


# test-job1:
#   stage: test
#   script:
#     - echo "This job tests something"

# deploy-prod:
#   stage: deploy
#   script:
#     - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
#   environment: production
# release_job:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest              # Run this job when a tag is created
#   script:
#     - echo "running release_job"
#     - commit_message=$(git log -1 --pretty=%B)
#     - tag_name=$(date +'%Y-%m-%d-%H-%M-%S')-"$(echo "$commit_message" | tr -s ' ' '-')"
#     - release-cli create --description "Release created automatically for $CI_COMMIT_REF_NAME" --tag-name "$tag_name"
#   # release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
#   #   tag_name: "$tag_name"
#   #   description: '$CI_COMMIT_TAG'
#   only:
#     - tags


