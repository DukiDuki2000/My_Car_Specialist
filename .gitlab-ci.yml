#te
stages:
  - build
  - test
  - deploy
  - release


# build_api-gateway:
#   stage: build
#   image: gradle:latest
#   script:
#     - cd /home/projekt/spring_apps/api-gateway
#     - gradle build
#   artifacts:
#     paths:
#       - api-gateway/target/*.jar
#     expire_in: 1 day
#   only:
#     - main



# build_discovery-service:
#   stage: build
#   image: gradle:latest
#   script:
#     - cd /home/projekt/spring_apps/discovery-service
#     - gradle build
#   artifacts:
#     paths:
#       - discovery-service/target/*.jar
#     expire_in: 1 day
#   only:
#     - main

# build_user-service:
#   stage: build
#   image: gradle:latest
#   script:
#     - cd /home/projekt/spring_apps/user-service
#     - gradle build
#   artifacts:
#     paths:
#       - user-service/target/*.jar
#     expire_in: 1 day
#   only:
#     - main

# build_garage-service:
#   stage: build
#   image: gradle:latest
#   script:
#     - cd /home/projekt/spring_apps/garage-service
#     - gradle build
#   artifacts:
#     paths:
#       - garage-service/target/*.jar
#     expire_in: 1 day
#   only:
#     - main

build_vechicle-service:
  stage: build
  script:
    - cd spring_apps/vechicle-service
    - gradle build
    # - cat spring_apps/vehicle-service/test.txt
    # - echo "gitara siema" > spring_apps/vehicle-service/result.txt
  artifacts:
    paths:
      - spring_apps/vehicle-service/build/libs/*.jar
    expire_in: 1 day
  only:
    - main


# build_notification-service:
#   stage: build
#   image: gradle:latest
#   script:
#     - cd /home/projekt/spring_apps/notification-service
#     - gradle build
#   artifacts:
#     paths:
#       - notification-service/target/*.jar
#     expire_in: 1 day
#   only:
#     - main

# build_recommendation-service:
#   stage: build
#   image: gradle:latest
#   script:
#     - cd /home/projekt/spring_apps/recommendation-service
#     - gradle build
#   artifacts:
#     paths:
#       - recommendation-service/target/*.jar
#     expire_in: 1 day
#   only:
#     - main

# test-all-services:
#   stage: test
#   image: gradle:latest
#   script:
#     - gradle --versione
#     - gradle test -p /home/projekt/spring_apps/api-gateway
#     - gradle test -p /home/projekt/spring_apps/discovery-service
#     - gradle test -p /home/projekt/spring_apps/user-service
#     - gradle test -p /home/projekt/spring_apps/garage-service
#     - gradle test -p /home/projekt/spring_apps/vechicle-service
#     - gradle test -p /home/projekt/spring_apps/notification-service
#     - gradle test -p /home/projekt/spring_apps/recommendation-service
#   only:
#     - main




build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - echo "Running a local script..."
    - chmod +x /home/projekt/test.sh
    - /home/projekt/test.sh
  only:
    - main

# test-job1:
#   stage: test
#   script:
#     - echo "This job tests something"

# deploy-prod:
#   stage: deploy
#   script:
#     - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
#   environment: production
# release_job:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest              # Run this job when a tag is created
#   script:
#     - echo "running release_job"
#     - commit_message=$(git log -1 --pretty=%B)
#     - tag_name=$(date +'%Y-%m-%d-%H-%M-%S')-"$(echo "$commit_message" | tr -s ' ' '-')"
#     - release-cli create --description "Release created automatically for $CI_COMMIT_REF_NAME" --tag-name "$tag_name"
#   # release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
#   #   tag_name: "$tag_name"
#   #   description: '$CI_COMMIT_TAG'
#   only:
#     - tags


