{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Strona g\u0142\u00f3wna","text":""},{"location":"#nawiguj-do","title":"Nawiguj do:","text":"Frontend Backend Testy"},{"location":"#skad-zespou","title":"Sk\u0142ad zespo\u0142u","text":"<ul> <li>Aleksandra Bigda</li> <li>Grzegorz Kocha\u0144ski</li> <li>Wojciech Makurat</li> </ul> <ul> <li>Pawe\u0142 Skowron</li> <li>Jakub Tokarski</li> </ul> <ul> <li>Kamil W\u00f3jcik</li> <li>Kamil Zych</li> </ul>"},{"location":"#dokumentacja-analityczna-my-car-specialist","title":"Dokumentacja analityczna <code>My Car Specialist</code>","text":""},{"location":"#projekt-system-dla-warsztatow-samochodowych","title":"Projekt: System dla warsztat\u00f3w samochodowych","text":""},{"location":"#opis-projektu","title":"Opis projektu","text":"<p>System b\u0119dzie mia\u0142 za zadanie umo\u017cliwi\u0107 komunikacj\u0119 mi\u0119dzy klientem, a warsztatem samochodowym w zakresie obs\u0142ugi i napraw pojazd\u00f3w. Za jego pomoc\u0105 klient b\u0119dzie m\u00f3g\u0142 sprawdzi\u0107 histori\u0119 napraw swojego auta wraz z poniesionymi z ich tytu\u0142u kosztami. Oprogramowanie b\u0119dzie r\u00f3wnie\u017c oferowa\u0142o funkcjonalno\u015b\u0107 pozwalaj\u0105c\u0105 na sprawdzenie informacji o pojezdzie po jego numerze VIN. Dodatkowo zostanie zaimplementowana mo\u017cliwo\u015b\u0107 komunikacji mailowej z klientem w celu przypomnienia o nadchodz\u0105cym terminie wizyty oraz o zako\u0144czeniu serwisu.</p> <p>System umo\u017cliwi pracownikom warsztatu rejestracj\u0119 wykonanych prac serwisowych. Ka\u017cda czynno\u015b\u0107 wykonana przy poje\u017adzie b\u0119dzie posiada\u0107 opis przyj\u0119tego pojazdu (nr VIN, przebieg, zauwa\u017cone uszkodzenia), wykorzystane cz\u0119\u015bci, kosztorys i dodatkowy opis, w kt\u00f3rym w zale\u017cno\u015bci od potrzeb, zostan\u0105 zawarte wszystkie informacje kluczowe w dalszej poprawnej eksploatacji pojazdu, lub przysz\u0142ych napraw.</p>"},{"location":"#funkcje-systemu-dostepne-dla-klienta","title":"Funkcje systemu dost\u0119pne dla klienta:","text":"<ul> <li>system logowania i rejestracji u\u017cytkownika,</li> <li>przypisanie pojazdu do swojego konta (podanie poprawnej kombinacji numeru rejestracyjnego i numeru VIN),</li> <li>sprawdzenie pojazdu po numerze VIN,</li> <li>przegl\u0105danie historii serwisowej,</li> <li>tworzenie zg\u0142oszenia serwisowego,</li> <li>kontakt mailowy z warsztatem,</li> <li>generowanie raport\u00f3w PDF z napraw.</li> </ul>"},{"location":"#funkcje-systemu-dostepne-dla-pracownikow-warsztatu","title":"Funkcje systemu dost\u0119pne dla pracownik\u00f3w warsztatu:","text":"<ul> <li>panel administracyjny,</li> <li>tworzenie historii serwisowej,</li> <li>kontakt z klientem (wiadomo\u015bci E-mail),</li> <li>zmiana statusu naprawy,</li> <li>generowanie zg\u0142oszenia serwisowego dla serwisanta na podstawie odebranego zg\u0142oszenia online, lub wype\u0142nionego r\u0119cznie (do wydruku),</li> <li>generowanie raport\u00f3w PDF z napraw,</li> <li>automatyczna archiwizacja napraw.</li> </ul>"},{"location":"#przewidywana-struktura-aplikacji-bedzie-sie-skadac-z","title":"Przewidywana struktura aplikacji b\u0119dzie si\u0119 sk\u0142ada\u0107 z:","text":"<ul> <li>Frontend SPA (Single-Page-Application) z systemem autoryzacji u\u017cytkownika, gdzie w zale\u017cno\u015bci od uprawnie\u0144 b\u0119dzie mia\u0142 dost\u0119p do odpowiednich funkcjonalno\u015bci.</li> <li>Backend zarz\u0105dzaj\u0105cy logik\u0105 operacji wewn\u0105trz aplikacji.</li> <li>Baza danych klient\u00f3w, pojazd\u00f3w, czynno\u015bci serwisowych ze szczeg\u00f3\u0142ami i kosztorysami, faktur.</li> </ul>"},{"location":"#schemat-struktury","title":"Schemat struktury","text":""},{"location":"#strona-gowna_1","title":"Strona g\u0142\u00f3wna","text":""},{"location":"#panel-uzytkownika","title":"Panel u\u017cytkownika","text":""},{"location":"#panel-warsztatu","title":"Panel warsztatu","text":""},{"location":"#panel-moderatora","title":"Panel moderatora","text":""},{"location":"#poradnik-uzytkownika","title":"Poradnik u\u017cytkownika","text":"Twoja"},{"location":"#schemat-projektu","title":"Schemat projektu","text":"Frontend  <pre><code>\u251c\u2500\u2500 404.tsx\n\u251c\u2500\u2500 500.tsx\n\u251c\u2500\u2500 about\n\u2502   \u2514\u2500\u2500 page.tsx\n\u251c\u2500\u2500 auth\n\u2502   \u251c\u2500\u2500 login\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u2514\u2500\u2500 register\n\u2502       \u2514\u2500\u2500 page.tsx\n\u251c\u2500\u2500 _document.tsx\n\u251c\u2500\u2500 form\n\u2502   \u2514\u2500\u2500 page.tsx\n\u2514\u2500\u2500 [name]\n\u251c\u2500\u2500 client-dashboard\n\u2502   \u251c\u2500\u2500 add-request\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 client-info\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 requests-list\n\u2502   \u2502   \u251c\u2500\u2500 page.tsx\n\u2502   \u2502   \u251c\u2500\u2500 request-actual\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u2502   \u2514\u2500\u2500 request-history\n\u2502   \u2502       \u2514\u2500\u2500 page.tsx\n\u2502   \u2514\u2500\u2500 vehicles\n\u2502       \u251c\u2500\u2500 add-car\n\u2502       \u2502   \u2514\u2500\u2500 page.tsx\n\u2502       \u251c\u2500\u2500 page.tsx\n\u2502       \u2514\u2500\u2500 show-vehicles\n\u2502           \u2514\u2500\u2500 page.tsx\n\u251c\u2500\u2500 garage-dashboard\n\u2502   \u251c\u2500\u2500 actual\n\u2502   \u2502   \u251c\u2500\u2500 [id]\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 garage-info\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 history\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 page.tsx\n\u2502   \u2514\u2500\u2500 pending-ticket-list\n\u2502       \u2514\u2500\u2500 page.tsx\n\u251c\u2500\u2500 moderator-dashboard\n\u2502   \u251c\u2500\u2500 check-car\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u251c\u2500\u2500 check-requests\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx\n\u2502   \u2514\u2500\u2500 page.tsx\n\u2514\u2500\u2500 page.tsx\n</code></pre>   Backend  <pre><code>\u251c\u2500\u2500\u2500.idea\n\u2502   \u251c\u2500\u2500\u2500httpRequests\n\u2502   \u2514\u2500\u2500\u2500modules\n\u251c\u2500\u2500\u2500docs\n\u2502   \u251c\u2500\u2500\u2500assets\n\u2502   \u251c\u2500\u2500\u2500backend-md\n\u2502   \u251c\u2500\u2500\u2500frontend-md\n\u2502   \u2514\u2500\u2500\u2500main-md\n\u2514\u2500\u2500\u2500spring_apps\n    \u251c\u2500\u2500\u2500api-gateway\n    \u2502   \u251c\u2500\u2500\u2500.gradle\n    \u2502   \u2502   \u251c\u2500\u2500\u25008.11.1\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500checksums\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500executionHistory\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500expanded\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileChanges\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileHashes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500vcsMetadata\n    \u2502   \u2502   \u251c\u2500\u2500\u2500buildOutputCleanup\n    \u2502   \u2502   \u2514\u2500\u2500\u2500vcs-1\n    \u2502   \u251c\u2500\u2500\u2500build\n    \u2502   \u2502   \u251c\u2500\u2500\u2500classes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500com\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502   \u2502   \u2502                   \u2514\u2500\u2500\u2500api_gateway\n    \u2502   \u2502   \u2502                       \u2514\u2500\u2500\u2500security\n    \u2502   \u2502   \u251c\u2500\u2500\u2500generated\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500sources\n    \u2502   \u2502   \u2502       \u251c\u2500\u2500\u2500annotationProcessor\n    \u2502   \u2502   \u2502       \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500headers\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u251c\u2500\u2500\u2500reports\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500problems\n    \u2502   \u2502   \u251c\u2500\u2500\u2500resources\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2514\u2500\u2500\u2500tmp\n    \u2502   \u2502       \u2514\u2500\u2500\u2500compileJava\n    \u2502   \u2502           \u2514\u2500\u2500\u2500compileTransaction\n    \u2502   \u2502               \u251c\u2500\u2500\u2500backup-dir\n    \u2502   \u2502               \u2514\u2500\u2500\u2500stash-dir\n    \u2502   \u251c\u2500\u2500\u2500gradle\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u251c\u2500\u2500\u2500main\n    \u2502       \u2502   \u251c\u2500\u2500\u2500java\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500\u2500com\n    \u2502       \u2502   \u2502       \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502       \u2502   \u2502           \u2514\u2500\u2500\u2500api_gateway\n    \u2502       \u2502   \u2502               \u2514\u2500\u2500\u2500security\n    \u2502       \u2502   \u2514\u2500\u2500\u2500resources\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u2514\u2500\u2500\u2500java\n    \u2502               \u2514\u2500\u2500\u2500com\n    \u2502                   \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502                       \u2514\u2500\u2500\u2500api_gateway\n    \u251c\u2500\u2500\u2500garage-service\n    \u2502   \u251c\u2500\u2500\u2500.gradle\n    \u2502   \u2502   \u251c\u2500\u2500\u25008.11.1\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500checksums\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500executionHistory\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500expanded\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileChanges\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileHashes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500vcsMetadata\n    \u2502   \u2502   \u251c\u2500\u2500\u2500buildOutputCleanup\n    \u2502   \u2502   \u2514\u2500\u2500\u2500vcs-1\n    \u2502   \u251c\u2500\u2500\u2500build\n    \u2502   \u2502   \u251c\u2500\u2500\u2500classes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500com\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502   \u2502   \u2502                   \u2514\u2500\u2500\u2500garage_service\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500dto\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500model\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500repositories\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500rest\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500security\n    \u2502   \u2502   \u2502                       \u2514\u2500\u2500\u2500service\n    \u2502   \u2502   \u251c\u2500\u2500\u2500generated\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500sources\n    \u2502   \u2502   \u2502       \u251c\u2500\u2500\u2500annotationProcessor\n    \u2502   \u2502   \u2502       \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500headers\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u251c\u2500\u2500\u2500reports\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500problems\n    \u2502   \u2502   \u251c\u2500\u2500\u2500resources\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2514\u2500\u2500\u2500tmp\n    \u2502   \u2502       \u2514\u2500\u2500\u2500compileJava\n    \u2502   \u2502           \u2514\u2500\u2500\u2500compileTransaction\n    \u2502   \u2502               \u251c\u2500\u2500\u2500backup-dir\n    \u2502   \u2502               \u2514\u2500\u2500\u2500stash-dir\n    \u2502   \u251c\u2500\u2500\u2500gradle\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u251c\u2500\u2500\u2500main\n    \u2502       \u2502   \u251c\u2500\u2500\u2500java\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500\u2500com\n    \u2502       \u2502   \u2502       \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502       \u2502   \u2502           \u2514\u2500\u2500\u2500garage_service\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500dto\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500model\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500repositories\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500rest\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500security\n    \u2502       \u2502   \u2502               \u2514\u2500\u2500\u2500service\n    \u2502       \u2502   \u2514\u2500\u2500\u2500resources\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u2514\u2500\u2500\u2500java\n    \u2502               \u2514\u2500\u2500\u2500com\n    \u2502                   \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502                       \u2514\u2500\u2500\u2500garage-service\n    \u251c\u2500\u2500\u2500notification-service\n    \u2502   \u251c\u2500\u2500\u2500.gradle\n    \u2502   \u2502   \u251c\u2500\u2500\u25008.11.1\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500checksums\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500executionHistory\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500expanded\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileChanges\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileHashes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500vcsMetadata\n    \u2502   \u2502   \u251c\u2500\u2500\u2500buildOutputCleanup\n    \u2502   \u2502   \u2514\u2500\u2500\u2500vcs-1\n    \u2502   \u251c\u2500\u2500\u2500build\n    \u2502   \u2502   \u251c\u2500\u2500\u2500classes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500com\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502   \u2502   \u2502                   \u2514\u2500\u2500\u2500notification_service\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500rest\n    \u2502   \u2502   \u2502                       \u2514\u2500\u2500\u2500security\n    \u2502   \u2502   \u251c\u2500\u2500\u2500generated\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500sources\n    \u2502   \u2502   \u2502       \u251c\u2500\u2500\u2500annotationProcessor\n    \u2502   \u2502   \u2502       \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500headers\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u251c\u2500\u2500\u2500reports\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500problems\n    \u2502   \u2502   \u251c\u2500\u2500\u2500resources\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2514\u2500\u2500\u2500tmp\n    \u2502   \u2502       \u2514\u2500\u2500\u2500compileJava\n    \u2502   \u2502           \u2514\u2500\u2500\u2500compileTransaction\n    \u2502   \u2502               \u251c\u2500\u2500\u2500backup-dir\n    \u2502   \u2502               \u2514\u2500\u2500\u2500stash-dir\n    \u2502   \u251c\u2500\u2500\u2500gradle\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u251c\u2500\u2500\u2500main\n    \u2502       \u2502   \u251c\u2500\u2500\u2500java\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500\u2500com\n    \u2502       \u2502   \u2502       \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502       \u2502   \u2502           \u2514\u2500\u2500\u2500notification_service\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500rest\n    \u2502       \u2502   \u2502               \u2514\u2500\u2500\u2500security\n    \u2502       \u2502   \u2514\u2500\u2500\u2500resources\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u2514\u2500\u2500\u2500java\n    \u2502               \u2514\u2500\u2500\u2500com\n    \u2502                   \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502                       \u2514\u2500\u2500\u2500notification-service\n    \u251c\u2500\u2500\u2500recommendation-service\n    \u2502   \u251c\u2500\u2500\u2500.gradle\n    \u2502   \u2502   \u251c\u2500\u2500\u25008.11.1\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500checksums\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500executionHistory\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500expanded\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileChanges\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileHashes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500vcsMetadata\n    \u2502   \u2502   \u251c\u2500\u2500\u2500buildOutputCleanup\n    \u2502   \u2502   \u2514\u2500\u2500\u2500vcs-1\n    \u2502   \u251c\u2500\u2500\u2500build\n    \u2502   \u2502   \u2514\u2500\u2500\u2500reports\n    \u2502   \u2502       \u2514\u2500\u2500\u2500problems\n    \u2502   \u251c\u2500\u2500\u2500gradle\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u251c\u2500\u2500\u2500main\n    \u2502       \u2502   \u251c\u2500\u2500\u2500java\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500\u2500com\n    \u2502       \u2502   \u2502       \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502       \u2502   \u2502           \u2514\u2500\u2500\u2500recommendation_service\n    \u2502       \u2502   \u2502               \u2514\u2500\u2500\u2500rest\n    \u2502       \u2502   \u2514\u2500\u2500\u2500resources\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u2514\u2500\u2500\u2500java\n    \u2502               \u2514\u2500\u2500\u2500com\n    \u2502                   \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502                       \u2514\u2500\u2500\u2500recommendation-service\n    \u251c\u2500\u2500\u2500user-service\n    \u2502   \u251c\u2500\u2500\u2500.gradle\n    \u2502   \u2502   \u251c\u2500\u2500\u25008.11.1\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500checksums\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500executionHistory\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500expanded\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileChanges\n    \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500fileHashes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500vcsMetadata\n    \u2502   \u2502   \u251c\u2500\u2500\u2500buildOutputCleanup\n    \u2502   \u2502   \u2514\u2500\u2500\u2500vcs-1\n    \u2502   \u251c\u2500\u2500\u2500build\n    \u2502   \u2502   \u251c\u2500\u2500\u2500classes\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500com\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502   \u2502   \u2502                   \u2514\u2500\u2500\u2500user_service\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500controllers\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500models\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500payload\n    \u2502   \u2502   \u2502                       \u2502   \u251c\u2500\u2500\u2500request\n    \u2502   \u2502   \u2502                       \u2502   \u2514\u2500\u2500\u2500response\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500repositories\n    \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500rest\n    \u2502   \u2502   \u2502                       \u2514\u2500\u2500\u2500security\n    \u2502   \u2502   \u2502                           \u251c\u2500\u2500\u2500jwt\n    \u2502   \u2502   \u2502                           \u2514\u2500\u2500\u2500services\n    \u2502   \u2502   \u251c\u2500\u2500\u2500generated\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500sources\n    \u2502   \u2502   \u2502       \u251c\u2500\u2500\u2500annotationProcessor\n    \u2502   \u2502   \u2502       \u2502   \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502       \u2502       \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500headers\n    \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500java\n    \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u251c\u2500\u2500\u2500reports\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500problems\n    \u2502   \u2502   \u251c\u2500\u2500\u2500resources\n    \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500main\n    \u2502   \u2502   \u2514\u2500\u2500\u2500tmp\n    \u2502   \u2502       \u2514\u2500\u2500\u2500compileJava\n    \u2502   \u2502           \u2514\u2500\u2500\u2500compileTransaction\n    \u2502   \u2502               \u251c\u2500\u2500\u2500backup-dir\n    \u2502   \u2502               \u2514\u2500\u2500\u2500stash-dir\n    \u2502   \u251c\u2500\u2500\u2500gradle\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u251c\u2500\u2500\u2500main\n    \u2502       \u2502   \u251c\u2500\u2500\u2500java\n    \u2502       \u2502   \u2502   \u2514\u2500\u2500\u2500com\n    \u2502       \u2502   \u2502       \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502       \u2502   \u2502           \u2514\u2500\u2500\u2500user_service\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500controllers\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500models\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500payload\n    \u2502       \u2502   \u2502               \u2502   \u251c\u2500\u2500\u2500request\n    \u2502       \u2502   \u2502               \u2502   \u2514\u2500\u2500\u2500response\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500repositories\n    \u2502       \u2502   \u2502               \u251c\u2500\u2500\u2500rest\n    \u2502       \u2502   \u2502               \u2514\u2500\u2500\u2500security\n    \u2502       \u2502   \u2502                   \u251c\u2500\u2500\u2500jwt\n    \u2502       \u2502   \u2502                   \u2514\u2500\u2500\u2500services\n    \u2502       \u2502   \u2514\u2500\u2500\u2500resources\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u2514\u2500\u2500\u2500java\n    \u2502               \u2514\u2500\u2500\u2500com\n    \u2502                   \u2514\u2500\u2500\u2500apsi_projekt\n    \u2502                       \u2514\u2500\u2500\u2500user_service\n    \u2514\u2500\u2500\u2500vehicle-service\n        \u251c\u2500\u2500\u2500.gradle\n        \u2502   \u251c\u2500\u2500\u25008.11.1\n        \u2502   \u2502   \u251c\u2500\u2500\u2500checksums\n        \u2502   \u2502   \u251c\u2500\u2500\u2500executionHistory\n        \u2502   \u2502   \u251c\u2500\u2500\u2500expanded\n        \u2502   \u2502   \u251c\u2500\u2500\u2500fileChanges\n        \u2502   \u2502   \u251c\u2500\u2500\u2500fileHashes\n        \u2502   \u2502   \u2514\u2500\u2500\u2500vcsMetadata\n        \u2502   \u251c\u2500\u2500\u2500buildOutputCleanup\n        \u2502   \u2514\u2500\u2500\u2500vcs-1\n        \u251c\u2500\u2500\u2500build\n        \u2502   \u2514\u2500\u2500\u2500reports\n        \u2502       \u2514\u2500\u2500\u2500problems\n        \u251c\u2500\u2500\u2500gradle\n        \u2502   \u2514\u2500\u2500\u2500wrapper\n        \u2514\u2500\u2500\u2500src\n            \u251c\u2500\u2500\u2500main\n            \u2502   \u251c\u2500\u2500\u2500java\n            \u2502   \u2502   \u2514\u2500\u2500\u2500com\n            \u2502   \u2502       \u2514\u2500\u2500\u2500apsi_projekt\n            \u2502   \u2502           \u2514\u2500\u2500\u2500vehicle_service\n            \u2502   \u2502               \u251c\u2500\u2500\u2500config\n            \u2502   \u2502               \u251c\u2500\u2500\u2500model\n            \u2502   \u2502               \u251c\u2500\u2500\u2500repository\n            \u2502   \u2502               \u251c\u2500\u2500\u2500rest\n            \u2502   \u2502               \u251c\u2500\u2500\u2500security\n            \u2502   \u2502               \u2514\u2500\u2500\u2500service\n            \u2502   \u2514\u2500\u2500\u2500resources\n            \u2514\u2500\u2500\u2500test\n                \u2514\u2500\u2500\u2500java\n                    \u2514\u2500\u2500\u2500com\n                        \u2514\u2500\u2500\u2500apsi_projekt\n                            \u2514\u2500\u2500\u2500vehicle_service\n</code></pre>"},{"location":"backend/","title":"Backend","text":"<p>API Gateway</p> <p>Garage Service</p> <p>Notification Service</p> <p>Recommendation Service</p> <p>User Service</p> <p>Vehicle Service</p>"},{"location":"frontend/","title":"Frontend","text":"<p>Aplikacja frontendowa sk\u0142ada si\u0119 z trzech g\u0142\u00f3wnych paneli dostosowanych do r\u00f3\u017cnych r\u00f3l u\u017cytkownik\u00f3w:</p> Client Dashboard Garage Dashboard Moderator Dashboard"},{"location":"tests/","title":"Tests","text":""},{"location":"tests/#frontend","title":"Frontend","text":""},{"location":"tests/#1-testy-automatyczne","title":"1. Testy automatyczne","text":""},{"location":"tests/#11-testowanie-formularza-logowania","title":"1.1. Testowanie formularza logowania","text":"<ul> <li> <p>Sprawdzenie poprawno\u015bci dzia\u0142ania formularza logowania.</p> </li> <li> <p>Dla poprawnych danych u\u017cytkownik zostaje przekierowany na panel u\u017cytkownika.</p> </li> <li> <p>Dla niepoprawnych danych system wy\u015bwietla komunikat o b\u0142\u0119dzie.</p> </li> </ul>"},{"location":"tests/#12-test-przycisku-wylogowania","title":"1.2. Test przycisku wylogowania","text":"<ul> <li>Sprawdzenie, czy klikni\u0119cie przycisku usuwa dane u\u017cytkownika z <code>localStorage</code>, powoduj\u0105c wylogowanie.</li> </ul>"},{"location":"tests/#2-testy-manualne-scenariusze","title":"2. Testy manualne (scenariusze)","text":""},{"location":"tests/#21-test-uzytkownika-klienta","title":"2.1. Test u\u017cytkownika - klienta","text":"<p>2.1.1. Sprawdzenie funkcjonowania formularza rejestracji</p> <p>Poprawne dane:</p> <ul> <li>Wprowadzenie poprawnych danych i potwierdzenie rejestracji powoduje utworzenie konta.</li> </ul> <p>Niepoprawne dane:</p> <ul> <li>Dla b\u0142\u0119dnie skonstruowanego e-maila system wy\u015bwietla komunikat o b\u0142\u0119dzie.</li> </ul> <p>2.1.2. Sprawdzenie funkcjonowania logowania</p> <p>Poprawne dane:</p> <ul> <li>Dla poprawnych danych logowania u\u017cytkownik zostaje przekierowany na panel klienta.</li> </ul> <p>Niepoprawne dane:</p> <ul> <li>Dla niepoprawnych danych system wy\u015bwietla komunikat o b\u0142\u0119dzie.</li> </ul> <p>2.1.3. Sprawdzenie poprawno\u015bci dzia\u0142ania przycisk\u00f3w panelu</p> <ul> <li> <p>Pojazdy</p> <ul> <li> <p>Przycisk przekierowuje na panel do zarz\u0105dzania pojazdami.</p> </li> <li> <p>Dodaj pojazd \u2013 przenosi do formularza dodawania pojazdu.</p> </li> <li> <p>Twoje pojazdy \u2013 przenosi do listy przypisanych pojazd\u00f3w.</p> </li> </ul> </li> <li> <p>Nowe zlecenie</p> <ul> <li>Przycisk przekierowuje do formularza dodawania nowego zg\u0142oszenia.</li> </ul> </li> <li> <p>Lista zlece\u0144</p> <ul> <li> <p>Przycisk przekierowuje do wyboru aktualnych i archiwalnych zlece\u0144.</p> </li> <li> <p>Aktualne zlecenia \u2013 wy\u015bwietla stron\u0119 z otwartymi zleceniami.</p> </li> <li> <p>Historia zlece\u0144 \u2013 pokazuje zamkni\u0119te zg\u0142oszenia.</p> </li> </ul> </li> </ul> <p>2.1.4. Sprawdzenie dodawania auta do u\u017cytkownika</p> <p>A. Przej\u015bcie z g\u0142\u00f3wnego menu klienta do strony Pojazdy.</p> <p>B. Przej\u015bcie do formularza Dodaj pojazd.</p> <p>C. Wype\u0142nienie formularza:</p> <p>Case 1:</p> <pre><code>- Wprowadzenie poprawnego numeru VIN.\n\n- Sprawdzenie dzia\u0142ania dekodowania VIN.\n\n- Dodanie pojazdu.\n</code></pre> <p>Case 2:</p> <pre><code>- Wprowadzenie niepoprawnego numeru VIN.\n\n- Sprawdzenie, czy system zg\u0142asza b\u0142\u0105d.\n</code></pre> <p>2.1.5. Sprawdzenie, czy auto zosta\u0142o przypisane do u\u017cytkownika</p> <ol> <li> <p>Przej\u015bcie do strony Pojazdy.</p> </li> <li> <p>Sprawdzenie, czy pojazd pojawi\u0142 si\u0119 w bazie danych i jest przypisany do u\u017cytkownika.</p> </li> </ol> <p>2.1.6. Sprawdzenie funkcjonowania dodawania nowego zg\u0142oszenia serwisowego</p> <p>Case 1:</p> <pre><code>- Wybranie pojazdu i miasta.\n\n- Sprawdzenie, czy wy\u015bwietlany jest odpowiedni warsztat.\n\n- Uzupe\u0142nienie pola \"Opis us\u0142ugi\".\n\n- Wys\u0142anie zg\u0142oszenia.\n</code></pre> <p>Case 2:</p> <pre><code>- Wybranie pojazdu i uzupe\u0142nienie opisu bez wyboru warsztatu.\n\n- Sprawdzenie, czy przycisk \"Wy\u015blij\" jest zablokowany.\n</code></pre> <p>Case 3:</p> <pre><code>- Wybranie warsztatu i uzupe\u0142nienie opisu bez wyboru pojazdu.\n\n- Sprawdzenie, czy przycisk \"Wy\u015blij\" jest zablokowany.\n</code></pre>"},{"location":"tests/#3-test-uzytkownika-warsztatu","title":"3. Test u\u017cytkownika - warsztatu","text":""},{"location":"tests/#31-sprawdzenie-formularza-rejestracji-warsztatu","title":"3.1. Sprawdzenie formularza rejestracji warsztatu","text":"<p>Case 1:</p> <pre><code>- Wprowadzenie poprawnego NIP-u.\n\n- Sprawdzenie automatycznego uzupe\u0142niania danych.\n\n- Wys\u0142anie zg\u0142oszenia.\n</code></pre> <p>Case 2:</p> <pre><code>- Wprowadzenie niepoprawnego NIP-u.\n\n- Sprawdzenie, czy pola nie zosta\u0142y uzupe\u0142nione.\n</code></pre>"},{"location":"tests/#32-sprawdzenie-funkcjonowania-logowania","title":"3.2. Sprawdzenie funkcjonowania logowania","text":"<ul> <li> <p>Poprawne dane \u2013 przekierowanie do panelu warsztatu.</p> </li> <li> <p>Niepoprawne dane \u2013 komunikat o b\u0142\u0119dzie.</p> </li> </ul>"},{"location":"tests/#33-sprawdzenie-poprawnosci-dziaania-przyciskow-panelu","title":"3.3. Sprawdzenie poprawno\u015bci dzia\u0142ania przycisk\u00f3w panelu","text":"<ul> <li> <p>Sprawdzanie zg\u0142osze\u0144 \u2013 przekierowanie do listy nowych zg\u0142osze\u0144.</p> </li> <li> <p>Aktualne zlecenia \u2013 lista aktywnych zg\u0142osze\u0144.</p> </li> <li> <p>Historia zlece\u0144 \u2013 przegl\u0105d zamkni\u0119tych zg\u0142osze\u0144.</p> </li> </ul>"},{"location":"tests/#34-sprawdzenie-panelu-sprawdzanie-zgoszen","title":"3.4. Sprawdzenie panelu \"Sprawdzanie zg\u0142osze\u0144\"","text":"<ul> <li> <p>Sprawdzenie, czy istnieje zg\u0142oszenie od klienta.</p> </li> <li> <p>Klikni\u0119cie \"Akceptuj\" przenosi zg\u0142oszenie do aktualnych zlece\u0144.</p> </li> </ul>"},{"location":"tests/#35-sprawdzenie-funkcjonalnosci-panelu-aktualne-zlecenia","title":"3.5. Sprawdzenie funkcjonalno\u015bci panelu \"Aktualne zlecenia\"","text":"<ul> <li> <p>Sprawdzenie danych klienta i pojazdu.</p> </li> <li> <p>Dodanie dzia\u0142a\u0144 do zg\u0142oszenia.</p> </li> <li> <p>Klikni\u0119cie \"Zako\u0144cz zg\u0142oszenie\" przenosi je do historii.</p> </li> </ul>"},{"location":"tests/#36-sprawdzenie-panelu-historia-zlecen","title":"3.6. Sprawdzenie panelu \"Historia zlece\u0144\"","text":"<ul> <li> <p>Uko\u0144czone zg\u0142oszenie jest widoczne z poprawnymi danymi.</p> </li> <li> <p>Klikni\u0119cie \"PDF\" pobiera raport zg\u0142oszenia.</p> </li> </ul>"},{"location":"tests/#4-test-uzytkownika-moderatora","title":"4. Test u\u017cytkownika - moderatora","text":""},{"location":"tests/#41-sprawdzenie-funkcjonalnosci-rejestracji-warsztatu","title":"4.1. Sprawdzenie funkcjonalno\u015bci rejestracji warsztatu","text":"<ul> <li> <p>Wprowadzenie NIP-u i automatyczne uzupe\u0142nienie danych.</p> </li> <li> <p>Sprawdzenie poprawno\u015bci danych.</p> </li> </ul>"},{"location":"tests/#42-sprawdzenie-funkcjonowania-logowania","title":"4.2. Sprawdzenie funkcjonowania logowania","text":"<ul> <li> <p>Poprawne dane \u2013 przekierowanie do panelu moderatora.</p> </li> <li> <p>Niepoprawne dane \u2013 komunikat o b\u0142\u0119dzie.</p> </li> </ul>"},{"location":"tests/#43-sprawdzenie-poprawnosci-dziaania-przyciskow-panelu","title":"4.3. Sprawdzenie poprawno\u015bci dzia\u0142ania przycisk\u00f3w panelu","text":"<ul> <li> <p>Dane pojazd\u00f3w \u2013 wyszukiwanie pojazd\u00f3w po VIN/tablicy.</p> </li> <li> <p>Sprawd\u017a pro\u015bby \u2013 przegl\u0105d zg\u0142osze\u0144 warsztat\u00f3w.</p> </li> </ul>"},{"location":"tests/#44-sprawdzenie-panelu-wyszukiwania-pojazdu","title":"4.4. Sprawdzenie panelu wyszukiwania pojazdu","text":"<ul> <li> <p>Poprawny VIN/tablica \u2013 wy\u015bwietlenie danych pojazdu.</p> </li> <li> <p>Niepoprawny VIN/tablica \u2013 komunikat \"Nie znaleziono\".</p> </li> </ul>"},{"location":"tests/#45-sprawdzenie-panelu-sprawdz-prosby","title":"4.5. Sprawdzenie panelu \"Sprawd\u017a pro\u015bby\"","text":"<ul> <li> <p>Rozwijanie/zamykanie zg\u0142osze\u0144 warsztat\u00f3w.</p> </li> <li> <p>Uzupe\u0142nianie danych i akceptacja zg\u0142oszenia.</p> </li> </ul>"},{"location":"tests/#46-sprawdzenie-poprawnosci-rejestracji-warsztatu","title":"4.6. Sprawdzenie poprawno\u015bci rejestracji warsztatu","text":"<ul> <li> <p>Wylogowanie si\u0119.</p> </li> <li> <p>Pr\u00f3ba logowania nowego warsztatu.</p> </li> <li> <p>Przekierowanie do panelu warsztatu.</p> </li> </ul>"},{"location":"tests/#backend","title":"Backend","text":"<p>Wykonano skrypt w j\u0119zyku Python z wykorzystaniem modu\u0142\u00f3w takich, jak <code>pytest</code>, <code>requests</code>, <code>json</code>. Jako, \u017ce mikroserwisy s\u0105 od siebie zale\u017cne, test zak\u0142ada, \u017ce w pierwszej kolejno\u015bci ca\u0142a aplikacja zosta\u0142a uruchomiona. Na test w ramach backendu sk\u0142ada si\u0119 kilkana\u015bcie zapyta\u0144 odno\u015bnie najwa\u017cniejszych funkcjonalno\u015bci aplikacji, takich jak:</p> <ul> <li> <p>\u017cywotno\u015b\u0107 modu\u0142\u00f3w,</p> </li> <li> <p>logowanie u\u017cytkownika,</p> </li> <li> <p>autoryzacja,</p> </li> <li> <p>dodawanie, usuwanie, wyszukiwanie gara\u017cy, pojazd\u00f3w i zapyta\u0144.</p> </li> </ul>"},{"location":"tests/#przykadowy-test","title":"Przyk\u0142adowy test","text":"Przyk\u0142adowy test<pre><code>dummy_data = {\n  \"nip\": \"1234567890\",\n  \"regon\": \"361723374\",\n  \"companyName\": \"CARPOLEX\",\n  \"address\": \"Ryzowa, Warszawa\",\n  \"phoneNumber\": \"09876543210\",\n  \"description\": \"qwerty\"\n}\n\nresponse = requests.post(\"http://localhost:8088/garage/openApi/add_request\", json=dummy_data)\nresponse_content = json.loads(response.text)\nassert response.status_code == 201 and response_content[\"companyName\"] == \"CARPOLEX\"\n\nresponse = requests.get(\"http://localhost:8088/garage/request/all\", headers={\"x-roles\": \"ROLE_MODERATOR\"})\nresponse_content = json.loads(response.text)\nexists = any(item.get(\"nip\") == dummy_data[\"nip\"] for item in response_content)\nassert response.status_code == 200 and exists\n\nresponse = requests.delete(\"http://localhost:8088/garage/request/\" + dummy_data[\"nip\"], headers={\"x-roles\": \"ROLE_MODERATOR\"})\nassert response.status_code == 200\n\nresponse = requests.get(\"http://localhost:8088/garage/request/all\", headers={\"x-roles\": \"ROLE_MODERATOR\"})\nresponse_content = json.loads(response.text)\nexists = any(item.get(\"nip\") == dummy_data[\"nip\"] for item in response_content)\nassert response.status_code == 200 and not exists\n</code></pre>"},{"location":"tests/#wyniki","title":"Wyniki","text":"<pre><code>(venv) C:\\Users\\Desktop\\apsi\\v2\\tests&gt;pytest -v -s --html=report.html\n=================================================================== test session starts ===================================================================\nplatform win32 -- Python 3.10.0, pytest-8.3.4, pluggy-1.5.0 -- C:\\Users\\Desktop\\apsi\\v2\\tests\\venv\\Scripts\\python.exe\ncachedir: .pytest_cache\nmetadata: {'Python': '3.10.0', 'Platform': 'Windows-10-10.0.22631-SP0', 'Packages': {'pytest': '8.3.4', 'pluggy': '1.5.0'}, 'Plugins': {'html': '4.1.1', 'metadata': '3.1.1'}}\nrootdir: C:\\Users\\Wojtas\\Desktop\\apsi\\v2\\tests\nplugins: html-4.1.1, metadata-3.1.1\ncollected 14 items\n\ntest_apsi.py::test_health Check services status:\n\nModu\u0142: vehicle-service, Status: UP\nModu\u0142: garage-service, Status: UP\nModu\u0142: api-gateway, Status: UP\nModu\u0142: user-service, Status: UP\nModu\u0142: notification-service, Status: UP\nModu\u0142: recommendation-service, Status: UP\n\n\nPASSED\ntest_apsi.py::test_signin_success Testing signin in:\n\nPASSED\ntest_apsi.py::test_signup_failure Testing signin up:\n\nPASSED\ntest_apsi.py::test_authorization_old_token Testing autorization (old token):\n\nPASSED\ntest_apsi.py::test_authorization_bad_token Testing autorization (bad token):\n\nPASSED\ntest_apsi.py::test_authorization_success Testing autorization (good token):\n\nPASSED\ntest_apsi.py::test_garage_request Testing requests:\n\nPASSED\ntest_apsi.py::test_get_garege_all Testing garage searching:\n\nPASSED\ntest_apsi.py::test_get_garage_city Testing garage filtering:\n\nPASSED\ntest_apsi.py::test_company_by_nip Testing company searching:\n\nPASSED\ntest_apsi.py::test_vehicle_hello_success Testing garage module communication:\n\nPASSED\ntest_apsi.py::test_vehicle_hello_bad_token Testing vehicle module communication:\n\nPASSED\ntest_apsi.py::test_search_vehicle Testing searching vehicle searching:\n\nPASSED\ntest_apsi.py::test_search_vehicle_vin Testing searching vehicle filtering:\n\nPASSED\n\n------------------------------------ Generated html report: file:///C:/Users/Desktop/apsi/v2/tests/report.html -------------------------------------\n=================================================================== 14 passed in 4.35s ====================================================================\n</code></pre>"},{"location":"backend-md/api-gateway/","title":"Api gateway","text":"<p>API Gateway jest kluczowym komponentem w architekturze mikroserwis\u00f3w, kt\u00f3ry umo\u017cliwia zarz\u0105dzanie ruchem mi\u0119dzy r\u00f3\u017cnymi mikroserwisami w systemie \"My Car Specialist\". Pe\u0142ni rol\u0119 centralnego punktu, kt\u00f3ry umo\u017cliwia routowanie zapyta\u0144 HTTP do odpowiednich mikroserwis\u00f3w, a tak\u017ce zapewnia mechanizmy uwierzytelniania, autoryzacji, logowania oraz filtrowania. Dzi\u0119ki centralnemu zarz\u0105dzaniu ruchem, API Gateway upraszcza komunikacj\u0119 pomi\u0119dzy mikroserwisami, zwi\u0119kszaj\u0105c bezpiecze\u0144stwo oraz skalowalno\u015b\u0107 systemu.</p>"},{"location":"backend-md/api-gateway/#struktura-aplikacji","title":"Struktura aplikacji","text":""},{"location":"backend-md/api-gateway/#1-gowna-aplikacja","title":"1. G\u0142\u00f3wna aplikacja","text":"<p>G\u0142\u00f3wna aplikacja API Gateway uruchamia aplikacj\u0119 Spring Boot, kt\u00f3ra zarz\u0105dza konfiguracj\u0105 API Gateway oraz definiuje punkty wej\u015bciowe do r\u00f3\u017cnych us\u0142ug mikroserwisowych.</p> <p>ApiGatewayApplication.java<pre><code>@SpringBootApplication\npublic class ApiGatewayApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(ApiGatewayApplication.class, args);\n    }\n}\n</code></pre> Aplikacja ta uruchamia g\u0142\u00f3wny kontekst Spring, umo\u017cliwiaj\u0105c konfiguracj\u0119 tras oraz integracj\u0119 z innymi mikroserwisami. Dzi\u0119ki tej aplikacji mo\u017cliwe jest zdefiniowanie regu\u0142 routingu i filtr\u00f3w bezpiecze\u0144stwa.</p>"},{"location":"backend-md/api-gateway/#2-komponenty-bezpieczenstwa","title":"2. Komponenty bezpiecze\u0144stwa","text":"<p>W ramach API Gateway stosowane s\u0105 r\u00f3\u017cne komponenty odpowiedzialne za bezpiecze\u0144stwo i monitorowanie zapyta\u0144. Przyk\u0142adem jest filtr <code>GlobalLoggingFilter</code>, kt\u00f3ry odpowiada za logowanie zapyta\u0144 HTTP, co pozwala na \u015bledzenie aktywno\u015bci w systemie.</p> <p>GlobalLoggingFilter.java<pre><code>@Component\npublic class GlobalLoggingFilter implements GlobalFilter {\n    @Override\n    public Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n        System.out.println(\"Request passing through GlobalLoggingFilter: \" + exchange.getRequest().getURI());\n        return chain.filter(exchange);\n    }\n}\n</code></pre> Filtry w API Gateway mog\u0105 by\u0107 r\u00f3wnie\u017c wykorzystywane do weryfikacji token\u00f3w JWT, sprawdzania uprawnie\u0144 u\u017cytkownik\u00f3w oraz wykonywania innych operacji przed przekazaniem zapytania do odpowiedniego mikroserwisu.</p>"},{"location":"backend-md/api-gateway/#3-pliki-konfiguracyjne","title":"3. Pliki konfiguracyjne","text":"<p>Plik <code>application.yml</code> to plik konfiguracyjny dla g\u0142\u00f3wnej aplikacji, w kt\u00f3rym definiowane s\u0105 trasy (routes) dla r\u00f3\u017cnych mikroserwis\u00f3w. Ka\u017cda trasa wskazuje na konkretny mikroserwis i przypisuje jej odpowiedni\u0105 logik\u0119 filtrowania oraz predykaty, kt\u00f3re okre\u015blaj\u0105, kiedy zapytania maj\u0105 by\u0107 kierowane do danej us\u0142ugi.</p> <p>application.yml<pre><code>spring:\n  application:\n    name: api-gateway\n  cloud:\n    gateway:\n      routes:\n        - id: user-service\n          uri: http://user-service:8080\n          predicates:\n            - Path=/user/**\n          filters:\n            - name: RoleFilter\n</code></pre> Plik <code>application-local.yml</code> dostosowuje konfiguracj\u0119 API Gateway do lokalnych warunk\u00f3w. W tym przypadku zmienia adresy URI mikroserwis\u00f3w na lokalne \u015bcie\u017cki, co umo\u017cliwia \u0142atwiejsze testowanie aplikacji w \u015brodowisku deweloperskim.</p> application-local.yml<pre><code>spring:\n  application:\n    name: api-gateway\n  cloud:\n    gateway:\n        routes:\n            - id: user-service\n              uri: http://localhost:8081\n              predicates:\n                - Path=/user/**\n              filters:\n              - name: RoleFilter\n</code></pre>"},{"location":"backend-md/api-gateway/#4-testy-jednostkowe","title":"4. Testy jednostkowe","text":"<p>Testy jednostkowe w projekcie zapewniaj\u0105, \u017ce aplikacja poprawnie \u0142aduje kontekst Spring Boot oraz nie wyst\u0119puj\u0105 b\u0142\u0119dy w konfiguracji. Testy te s\u0105 kluczowe dla utrzymania integralno\u015bci aplikacji w miar\u0119 jej rozwoju.</p> <p>ApiGatewayApplication.java<pre><code>@SpringBootTest\nclass ApiGatewayApplicationTests {\n\n    @Test\n    void contextLoads() {\n    }\n}\n</code></pre> Testy jednostkowe pozwalaj\u0105 na wczesne wykrywanie problem\u00f3w, co zmniejsza ryzyko b\u0142\u0119d\u00f3w w produkcji oraz umo\u017cliwia szybszy rozw\u00f3j aplikacji.</p>"},{"location":"backend-md/api-gateway/#podsumowanie","title":"Podsumowanie","text":"<p>API Gateway stanowi fundament wydajnej, bezpiecznej i \u0142atwej w utrzymaniu architektury mikroserwis\u00f3w. Dzi\u0119ki centralnemu zarz\u0105dzaniu ruchem, logowaniem oraz kontroli dost\u0119pu, API Gateway umo\u017cliwia skuteczne zarz\u0105dzanie komunikacj\u0105 mi\u0119dzy mikroserwisami. Mechanizmy takie jak filtrowanie zapyta\u0144 oraz weryfikacja JWT zapewniaj\u0105 pe\u0142n\u0105 kontrol\u0119 nad dost\u0119pem do poszczeg\u00f3lnych us\u0142ug, co jest kluczowe w systemach, w kt\u00f3rych bezpiecze\u0144stwo i skalowalno\u015b\u0107 maj\u0105 najwy\u017csze znaczenie.</p>"},{"location":"backend-md/garage-service/","title":"Garage service","text":"<p>Garage Service jest mikroserwisem w systemie \"My Car Specialist\", kt\u00f3ry zarz\u0105dza danymi warsztat\u00f3w samochodowych oraz umo\u017cliwia ich integracj\u0119 z zewn\u0119trznymi API, takimi jak API podatkowe (VAT). Jego funkcje obejmuj\u0105 m.in. obs\u0142ug\u0119 zg\u0142osze\u0144 nowych warsztat\u00f3w, przechowywanie szczeg\u00f3\u0142owych informacji o firmach, walidacj\u0119 danych oraz integracj\u0119 z innymi us\u0142ugami systemu. Dzi\u0119ki temu mikroserwisowi system oferuje centralny punkt zarz\u0105dzania informacjami o warsztatach.</p>"},{"location":"backend-md/garage-service/#gowna-aplikacja","title":"G\u0142\u00f3wna aplikacja","text":"<p>G\u0142\u00f3wna klasa aplikacji Spring Boot uruchamia kontekst Spring, definiuje podstawowe komponenty (np. <code>RestTemplate</code> do obs\u0142ugi zewn\u0119trznych zapyta\u0144 HTTP) oraz zarz\u0105dza konfiguracj\u0105 ca\u0142ej aplikacji.</p> <p>GarageServiceApplication.java<pre><code>@SpringBootApplication\npublic class GarageServiceApplication {\n\n    public static void main(String[] args) {\n    SpringApplication.run(GarageServiceApplication.class, args);\n    }\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n}\n</code></pre> Komponent <code>RestTemplate</code> jest wykorzystywany do wysy\u0142ania \u017c\u0105da\u0144 HTTP do zewn\u0119trznego API (np. API VAT), co pozwala na weryfikacj\u0119 danych o firmach w czasie rzeczywistym.</p>"},{"location":"backend-md/garage-service/#model-danych","title":"Model danych","text":""},{"location":"backend-md/garage-service/#encja-garage","title":"Encja <code>Garage</code>","text":"<p>Encja <code>Garage</code> reprezentuje warsztat samochodowy i odpowiada tabeli w bazie danych. Zawiera szczeg\u00f3\u0142owe informacje o warsztacie, takie jak nazwa firmy, NIP, REGON, numery IBAN oraz dane kontaktowe.</p> <p>Adnotacje na poziomie klasy Garage.java<pre><code>@Table (name = \"garages\", uniqueConstraints = {\n    @UniqueConstraint(columnNames = \"nip\"),\n    @UniqueConstraint(columnNames = \"regon\")\n})\n</code></pre></p> <ul> <li><code>@Entity</code> \u2013 definiuje t\u0119 klas\u0119 jako encj\u0119 JPA, co oznacza, \u017ce jej obiekty mog\u0105 by\u0107 mapowane do rekord\u00f3w w bazie danych.</li> <li><code>@Table</code> \u2013 okre\u015bla nazw\u0119 tabeli w bazie danych jako \"garages\", a tak\u017ce definiuje unikalne ograniczenia dla kolumn nip oraz regon, aby zapobiec duplikatom tych danych.</li> </ul> <p>Pola klasy</p> <p>Ka\u017cde pole w klasie odpowiada kolumnie w tabeli bazy danych.</p> Garage.java<pre><code>private @Id\n@GeneratedValue(strategy = GenerationType.AUTO)\nLong Id;\n</code></pre> <ul> <li><code>@Id</code> \u2013 wskazuje g\u0142\u00f3wny klucz encji.</li> <li><code>@GeneratedValue(strategy = GenerationType.AUTO)</code> \u2013 definiuje automatyczne generowanie warto\u015bci klucza g\u0142\u00f3wnego.</li> </ul> <p>NIP Garage.java<pre><code>@NotBlank\n@NotNull\n@Size(min = 10, max = 10, message = \"Nip length must be exactly 10\")\n@Pattern(regexp = \"\\\\d{10}\")\n@Column(name = \"nip\", nullable = false, updatable = false, unique = true, length = 10)\nString nip;\n</code></pre> REGON Garage.java<pre><code>@NotBlank\n@NotNull\n@Size(min = 7, max = 14, message = \"REGON length must be 7 or 9 or 14\")\n@Pattern(regexp = \"^\\\\d{7}$|\\\\d{9}$|\\\\d{14}$\")\n@Column(name = \"regon\", nullable = false, updatable = false, unique = true, length = 14)\nString regon;\n</code></pre> REGON obs\u0142uguje r\u00f3\u017cne d\u0142ugo\u015bci (7, 9 lub 14 cyfr), co odzwierciedla r\u00f3\u017cne standardy identyfikacji.</p> <p>Lista rachunk\u00f3w IBAN Garage.java<pre><code>@NotNull\n@ElementCollection(fetch = FetchType.LAZY)\n@Column(name = \"ibans\", nullable = false, length = 35)\nList&lt;@NotBlank\n@Pattern(regexp = \"^[A-Z]{2}\\\\d{2}[A-Z0-9]{4,30}$\")\n@Size(min = 15, max = 34) String&gt; ibans;\n</code></pre></p> <ul> <li><code>@ElementCollection</code> \u2013 wskazuje, \u017ce pole przechowuje list\u0119 warto\u015bci.</li> <li><code>@Pattern</code> \u2013 wymusza format zgodny ze standardem IBAN (krajowy kod i cyfry).</li> <li><code>@Size(min</code> = 15, max = 34) \u2013 definiuje d\u0142ugo\u015b\u0107 IBAN w zale\u017cno\u015bci od kraju.</li> </ul>"},{"location":"backend-md/garage-service/#dto-companyinfo","title":"DTO: <code>CompanyInfo</code>","text":"<p>Obiekt DTO (Data Transfer Object), kt\u00f3ry s\u0142u\u017cy do przesy\u0142ania danych o firmie w wyniku integracji z zewn\u0119trznymi API.</p> CompanyInfo.java<pre><code>@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class CompanyInfo {\n    private String name;\n    private String address;\n    private String nip;\n    private String regon;\n}\n</code></pre>"},{"location":"backend-md/garage-service/#repozytoria","title":"Repozytoria","text":""},{"location":"backend-md/garage-service/#garagerepository","title":"GarageRepository","text":"<p>Repozytorium JPA do zarz\u0105dzania danymi warsztat\u00f3w w bazie danych.</p> <p>GarageRepository.java<pre><code>public interface GarageRepository extends JpaRepository&lt;Garage, Long&gt; {\n    Optional&lt;Garage&gt; findByNip(String nip);\n}\n</code></pre> Repozytorium umo\u017cliwia wykonywanie operacji CRUD oraz dostarcza metod\u0119 do wyszukiwania warsztatu na podstawie numeru NIP.</p>"},{"location":"backend-md/garage-service/#usugi","title":"Us\u0142ugi","text":""},{"location":"backend-md/garage-service/#garageservice","title":"GarageService","text":"<p>Klasa GarageService odpowiada za obs\u0142ug\u0119 logiki biznesowej zwi\u0105zanej z warsztatami oraz integracj\u0119 z API podatkowym VAT. Wykorzystuje komponent RestTemplate do komunikacji z zewn\u0119trznym API oraz repozytorium JPA do zarz\u0105dzania danymi warsztat\u00f3w. G\u0142\u00f3wne funkcje:</p> <ul> <li><code>getCompanyInfoByNip</code> - pozyskuje dane o firmie na podstawie numeru NIP z zewn\u0119trznego API,</li> <li><code>addGarage</code> - dodaje nowy warsztat do bazy danych.</li> </ul> GarageService.java<pre><code>@Service\npublic class GarageService {\n\n    private final RestTemplate restTemplate;\n    private final String apiUrl = \"https://wl-api.mf.gov.pl/api/search/nip/{nip}?date={date}\";\n    private final GarageRepository garageRepository;\n\n    @Autowired\n    public GarageService(RestTemplate restTemplate, GarageRepository garageRepository) {\n    this.restTemplate = restTemplate;\n    this.garageRepository = garageRepository;\n}\n\npublic CompanyInfo getCompanyInfoByNip(String nip) {\n    String date = LocalDate.now().toString();\n\n    VATResposne response = restTemplate.getForObject(apiUrl, VATResposne.class, nip, date);\n\n    if (response != null &amp;&amp; response.getResult() != null &amp;&amp; response.getResult().getSubject() != null) {\n\n        VATResposne.Subject subject = response.getResult().getSubject();\n\n        return new CompanyInfo(\n            subject.getName(),\n            subject.getResidenceAddress(),\n            subject.getWorkingAddress(),\n            subject.getRegon(),\n            subject.getNip()\n        );\n    } else {\n        throw new RuntimeException(\"Nie znaleziono danych dla NIP: \" + nip);\n    }\n}\n\n    public Garage addGarage(Garage newGarage) {\n        return garageRepository.save(newGarage);\n    }\n}\n</code></pre>"},{"location":"backend-md/garage-service/#kontrolery-rest","title":"Kontrolery REST","text":""},{"location":"backend-md/garage-service/#garageopenapicontroller","title":"<code>GarageOpenApiController</code>","text":"<p>Publiczny kontroler REST obs\u0142uguj\u0105cy integracj\u0119 z API VAT oraz umo\u017cliwiaj\u0105cy zg\u0142oszenia nowych warsztat\u00f3w.</p> GarageOpenApiController.java<pre><code>@RestController\n@RequestMapping(\"/garage/openApi\")\n@RequiredArgsConstructor\npublic class GarageOpenApiController {\n\n    private final GarageService garageService;\n\n    @GetMapping(\"/{nip}\")\n    public ResponseEntity&lt;CompanyInfo&gt; getCompanyInfo(@PathVariable String nip) {\n        return ResponseEntity.ok(garageService.getCompanyInfo(nip));\n    }\n}\n</code></pre>"},{"location":"backend-md/garage-service/#garagerestcontroller","title":"<code>GarageRestController</code>","text":"<p>Chroniony kontroler REST umo\u017cliwiaj\u0105cy zarz\u0105dzanie danymi warsztat\u00f3w.</p> GarageRestController.java<pre><code>@RestController\n@RequestMapping(\"/garage\")\n@RequiredArgsConstructor\npublic class GarageRestController {\n\n    private final GarageService garageService;\n\n    @PostMapping(\"/add\")\n    @PreAuthorize(\"hasRole('ROLE_MODERATOR') or hasRole('ROLE_ADMIN')\")\n    public ResponseEntity&lt;Void&gt; addGarage(@RequestBody Garage garage) {\n        garageService.addGarage(garage);\n            return ResponseEntity.status(HttpStatus.CREATED).build();\n    }\n}\n</code></pre>"},{"location":"backend-md/garage-service/#bezpieczenstwo","title":"Bezpiecze\u0144stwo","text":""},{"location":"backend-md/garage-service/#securityconfig","title":"<code>SecurityConfig</code>","text":"<p>Definiuje regu\u0142y bezpiecze\u0144stwa aplikacji, w tym dost\u0119p do publicznych i chronionych endpoint\u00f3w.</p> SecurityConfig.java<pre><code>@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.csrf().disable()\n            .authorizeRequests()\n            .antMatchers(\"/garage/openApi/**\").permitAll()\n            .anyRequest().authenticated();\n    }\n}\n</code></pre>"},{"location":"backend-md/garage-service/#testy-jednostkowe","title":"Testy jednostkowe","text":"<p>Testy jednostkowe pozwalaj\u0105 na weryfikacj\u0119 poprawno\u015bci dzia\u0142ania serwis\u00f3w i kontroler\u00f3w. Przyk\u0142ad testu sprawdzaj\u0105cego za\u0142adowanie kontekstu aplikacji:</p> GarageServiceApplicationTests.java<pre><code>@SpringBootTest\nclass GarageServiceApplicationTests {\n\n    @Test\n    void contextLoads() {\n    }\n}\n</code></pre>"},{"location":"backend-md/garage-service/#podsumowanie","title":"Podsumowanie","text":"<p>Garage Service to kluczowy mikroserwis w systemie \"My Car Specialist\" odpowiedzialny za obs\u0142ug\u0119 warsztat\u00f3w. Dzi\u0119ki integracji z API VAT, zarz\u0105dzaniu danymi w bazie oraz precyzyjnym mechanizmom bezpiecze\u0144stwa, serwis ten zapewnia kompleksowe wsparcie dla funkcji zwi\u0105zanych z zarz\u0105dzaniem warsztatami, co przek\u0142ada si\u0119 na lepsze dzia\u0142anie ca\u0142ego systemu.</p>"},{"location":"backend-md/notification-service/","title":"Notification service","text":"<p>Notification Service to mikroserwis odpowiedzialny za obs\u0142ug\u0119 powiadomie\u0144. Serwis korzysta z Spring Boot, oferuj\u0105c REST API z autoryzacj\u0105 opartej na rolach u\u017cytkownik\u00f3w.</p>"},{"location":"backend-md/notification-service/#sturktura-projektu","title":"Sturktura projektu","text":""},{"location":"backend-md/notification-service/#gradle-wrapper","title":"Gradle Wrapper","text":"<p>W folderze <code>wrapper</code> znajduj\u0105 si\u0119 pliki konfiguruj\u0105ce <code>Gradle Wrapper</code>: gradle-wrapper.properties<pre><code>distributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-8.11.1-bin.zip\nnetworkTimeout=10000\nvalidateDistributionUrl=true\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\n</code></pre> <code>distributionUrl</code> \u2013 wskazuje wersj\u0119 Gradle (8.11.1), kt\u00f3ra jest u\u017cywana do budowania projektu.</p>"},{"location":"backend-md/notification-service/#gowne-komponenty-aplikacji","title":"G\u0142\u00f3wne komponenty aplikacji","text":"<p>Plik <code>NotificationServiceApplication.java</code> NotificationServiceApplication.java<pre><code>@SpringBootApplication\npublic class NotificationServiceApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(NotificationServiceApplication.class, args);\n    }\n}\n</code></pre> Uruchamia aplikacj\u0119 Spring Boot. Jest to punkt wej\u015bcia dla serwisu.</p> <p>REST API NotificationRestController.java<pre><code>@RestController\n@RequestMapping(\"notification\")\npublic class NotificationRestController {\n\n    public NotificationRestController() {\n    }\n\n    @GetMapping()\n    @PreAuthorize(\"hasRole('ROLE_ADMIN')\")\n    public String sayHello() {\n        return \"Hello from Notification Service!!\";\n    }\n}\n</code></pre> \u015acie\u017cka bazowa: <code>/notification</code>. Metoda <code>GET</code> zwraca komunikat powitalny. <code>@PreAuthorize</code> zapewnia ograniczony dost\u0119p - maj\u0105 go jedynie u\u017cytkownicy z rol\u0105 ROLE_ADMIN.</p> <p>Bezpiecze\u0144stwo</p> <p>Plik <code>AuthEntryPoint.java</code> obs\u0142uguje b\u0142\u0119dy autoryzacji. AuthEntryPoint.java<pre><code>@Component\npublic class AuthEntryPoint implements AuthenticationEntryPoint {\n\n    private static final Logger logger = LoggerFactory.getLogger(AuthEntryPoint.class);\n\n    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authExteption)\n    throws IOException {\n    logger.error(\"Unauthorized error: {}\", authExteption.getMessage());\n\n    response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n\n    final Map&lt;String, Object&gt; body = new HashMap&lt;&gt;();\n    body.put(\"status\", HttpServletResponse.SC_UNAUTHORIZED);\n    body.put(\"error\", \"Unauthorized\");\n    body.put(\"message\", authExteption.getMessage());\n    body.put(\"path\", request.getServletPath());\n\n    final ObjectMapper mapper = new ObjectMapper();\n    mapper.writeValue(response.getOutputStream(), body);\n}\n}\n</code></pre> Przy braku autoryzacji zwraca komunikat JSON z kodem <code>401 Unauthorized</code>.</p> <p><code>Plik AuthFilter.java</code></p> <p>Filtruje \u017c\u0105dania i odczytuje role u\u017cytkownik\u00f3w z nag\u0142\u00f3wka <code>X-Roles</code>. NotificationServiceApplicationTests.java<pre><code>    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n    throws ServletException, IOException {\n        String rolesHeader = request.getHeader(\"X-Roles\");\n\n        if (rolesHeader != null) {\n            try {\n                List&lt;String&gt; roles = Arrays.asList(rolesHeader.split(\",\"));\n\n                List&lt;GrantedAuthority&gt; authorities = roles.stream()\n                    .map(role -&gt; new SimpleGrantedAuthority(role.trim()))  // Role musz\u0105 by\u0107 odpowiednio sformatowane\n                    .collect(Collectors.toList());\n\n                UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(\n                    null, null, authorities\n                );\n\n                SecurityContextHolder.getContext().setAuthentication(authentication);\n\n            } catch (Exception e) {\n                logger.error(\"Error reading roles from X-Roles header: {}\", e);\n            }\n        }\n\n        filterChain.doFilter(request, response);\n    }\n</code></pre> Wczytuje role z nag\u0142\u00f3wka HTTP i przypisuje je do bie\u017c\u0105cego kontekstu zabezpiecze\u0144.</p> <p><code>Plik SecurityConfig.java</code></p> <p>Konfiguracja Spring Security. NotificationServiceApplicationTests.java<pre><code>@Configuration\n@EnableMethodSecurity\npublic class SecurityConfig {\n\n    @Autowired\n    private AuthEntryPoint unauthorizedHandler;\n\n    @Bean\n    public AuthFilter authenticationFilter() {\n        return new AuthFilter();\n    }\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n    http.csrf(AbstractHttpConfigurer::disable)\n.exceptionHandling(exception -&gt; exception.authenticationEntryPoint(unauthorizedHandler))\n.sessionManagement(session -&gt; session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\n.authorizeHttpRequests(auth -&gt;\n    auth.requestMatchers(\"/openApi/**\").permitAll()\n.anyRequest().authenticated()\n);\n\n    http.addFilterBefore(authenticationFilter(), UsernamePasswordAuthenticationFilter.class);\n\n    return http.build();\n}\n}\n</code></pre></p> <ul> <li>Wy\u0142\u0105cza CSRF.</li> <li>Ustawia sesj\u0119 jako stateless.</li> <li>Dodaje filtr <code>AuthFilter</code>.</li> <li>\u015acie\u017cki <code>/openApi/**</code> s\u0105 publicznie dost\u0119pne.</li> </ul>"},{"location":"backend-md/notification-service/#testy","title":"Testy","text":"<p>NotificationServiceApplicationTests.java<pre><code>@SpringBootTest\nclass NotificationServiceApplicationTests {\n\n    @Test\n    void contextLoads() {\n    }\n}\n</code></pre> Testuje podstawow\u0105 funkcjonalno\u015b\u0107 wczytywania kontekstu aplikacji.</p>"},{"location":"backend-md/notification-service/#funkcjonalnosci-serwisu","title":"Funkcjonalno\u015bci serwisu","text":"<p>OSerwis Notification Service zapewnia funkcjonalno\u015b\u0107 obs\u0142ugi REST API, kt\u00f3re jest dost\u0119pne pod \u015bcie\u017ck\u0105 <code>/notification</code>. Dzi\u0119ki integracji z Spring Security aplikacja umo\u017cliwia autoryzacj\u0119 u\u017cytkownik\u00f3w na podstawie r\u00f3l przekazywanych w nag\u0142\u00f3wku HTTP <code>X-Roles</code>. Role te s\u0105 wykorzystywane do kontrolowania dost\u0119pu do metod kontrolera, co pozwala na precyzyjne zarz\u0105dzanie uprawnieniami. W przypadku nieautoryzowanych \u017c\u0105da\u0144 serwis zwraca czytelne komunikaty w formacie JSON, co u\u0142atwia diagnostyk\u0119 b\u0142\u0119d\u00f3w zwi\u0105zanych z brakiem odpowiednich uprawnie\u0144.</p>"},{"location":"backend-md/notification-service/#podsumowanie","title":"Podsumowanie","text":"<p>Notification Service to lekki mikroserwis z wbudowan\u0105 obs\u0142ug\u0105 autoryzacji. Dzi\u0119ki konfiguracji Spring Security, obs\u0142udze b\u0142\u0119d\u00f3w oraz testom jednostkowym spe\u0142nia wymagania dotycz\u0105ce bezpiecze\u0144stwa i skalowalno\u015bci w \u015brodowisku produkcyjnym.</p>"},{"location":"backend-md/recommendation-service/","title":"Recommendation service","text":"<p>Recommendation Service to mikroserwis wykorzystuj\u0105cy Gradle jako narz\u0119dzie do zarz\u0105dzania zale\u017cno\u015bciami i budow\u0105 aplikacji. W folderze <code>wrapper</code> znajduje si\u0119 plik <code>gradle-wrapper.properties</code>, kt\u00f3ry konfiguruje dost\u0119p do narz\u0119dzia Gradle, umo\u017cliwiaj\u0105c korzystanie z okre\u015blonej wersji Gradle bez potrzeby jej instalowania globalnie.</p>"},{"location":"backend-md/recommendation-service/#gowne-komponenty-aplikacji","title":"G\u0142\u00f3wne komponenty aplikacji","text":""},{"location":"backend-md/recommendation-service/#recommendationserviceapplicationjava","title":"<code>RecommendationServiceApplication.java</code>","text":"<p>Plik ten zawiera g\u0142\u00f3wn\u0105 klas\u0119 aplikacji, kt\u00f3ra uruchamia serwis rekomendacji. Aplikacja jest skonfigurowana przy pomocy adnotacji <code>@SpringBootApplication</code>, co umo\u017cliwia jej uruchomienie w \u015brodowisku Spring Boot. To g\u0142\u00f3wny punkt wej\u015bciowy aplikacji, kt\u00f3ry uruchamia ca\u0142\u0105 logik\u0119 systemu.</p> RecommendationServiceApplication.java<pre><code>@SpringBootApplication\npublic class RecommendationServiceApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(RecommendationServiceApplication.class, args);\n    }\n}\n</code></pre>"},{"location":"backend-md/recommendation-service/#recommendationrestcontrollerjava","title":"RecommendationRestController.java","text":"<p>W tym pliku znajduje si\u0119 kontroler REST, kt\u00f3ry udost\u0119pnia proste API pod \u015bcie\u017ck\u0105 <code>/recommendation</code>. W tej wersji aplikacji kontroler zawiera jedn\u0105 metod\u0119, kt\u00f3ra zwraca komunikat powitalny: RecommendationServiceApplicationTests.java<pre><code>@RestController\n@RequestMapping(\"recommendation\")\npublic class RecommendationRestController {\n\n    public RecommendationRestController() {\n    }\n\n    @GetMapping()\n    public String sayHello() {\n        return \"Hello from Recommendation Service!\";\n    }\n}\n</code></pre></p>"},{"location":"backend-md/recommendation-service/#plik-konfiguracyjny","title":"Plik konfiguracyjny","text":"<p>W folderze <code>resources</code> znajduje si\u0119 plik <code>application.yml</code>, w kt\u00f3rym konfigurowana jest aplikacja. Okre\u015blono tam nazw\u0119 aplikacji jako recommendation-service, co pozwala na \u0142atwiejsze zarz\u0105dzanie i rozpoznawanie serwis\u00f3w w systemie. application.yml<pre><code>spring:\n  application:\n    name: recommendation-service\n</code></pre></p>"},{"location":"backend-md/recommendation-service/#testy","title":"Testy","text":"<p>Plik testowy <code>RecommendationServiceApplicationTests.java</code> sprawdza, czy aplikacja poprawnie \u0142aduje si\u0119 w kontek\u015bcie Spring Boot. Testy te s\u0105 podstawowe, ale wa\u017cne do zapewnienia poprawno\u015bci uruchomienia aplikacji. RecommendationServiceApplicationTests.java<pre><code>@SpringBootTest\nclass RecommendationServiceApplicationTests {\n\n    @Test\n    void contextLoads() {\n    }\n}\n</code></pre></p>"},{"location":"backend-md/recommendation-service/#funkcjonalnosci-serwisu","title":"Funkcjonalno\u015bci serwisu","text":"<p>Recommendation Service to prosty serwis, kt\u00f3ry na chwil\u0119 obecn\u0105 udost\u0119pnia jedynie metod\u0119 GET na \u015bcie\u017cce /recommendation, zwracaj\u0105c\u0105 komunikat powitalny. W przysz\u0142o\u015bci serwis zostanie rozbudowany.</p>"},{"location":"backend-md/user-service/","title":"User service","text":"<p>User Service jest jednym z mikroserwis\u00f3w, kt\u00f3ry jest odpowiedzialny za zarz\u0105dzanie u\u017cytkownikami i ich autentykacj\u0119 w ca\u0142ym systemie. U\u017cywa Spring Boot, Spring Security, JWT, oraz JPA w celu implementacji  funkcji rejestracji, logowania, oraz autoryzacji u\u017cytkownik\u00f3w. Zosta\u0142 zaprojektowany, aby  wsp\u00f3\u0142pracowa\u0107 z innymi us\u0142ugami w ramach systemu.</p>"},{"location":"backend-md/user-service/#struktura-user-service","title":"Struktura User Service","text":""},{"location":"backend-md/user-service/#1-podstawowa-konfiguracja-i-uruchamianie-aplikacji","title":"1. Podstawowa konfiguracja i uruchamianie aplikacji","text":"<p><code>UserServiceApplication.java</code></p> <p>G\u0142\u00f3wna klasa aplikacji, uruchamiaj\u0105ca mikroserwis za pomoc\u0105 Spring Boot. Aplikacja dzia\u0142a w ramach wi\u0119kszego systemu backendowego i jest zale\u017cna od konfiguracji oraz interakcji z innymi mikroserwisami, jak np. API Gateway, kt\u00f3ry przekierowuje \u017c\u0105dania do odpowiednich us\u0142ug.</p>"},{"location":"backend-md/user-service/#2-autentykacja-i-autoryzacja","title":"2. Autentykacja i autoryzacja","text":"<p>Spring Security w User Service implementuje mechanizmy zabezpiecze\u0144, w tym logowanie oraz przypisanie r\u00f3l u\u017cytkownikom: - <code>JwtUtils</code> - generuje i weryfikuje tokeny JWT, kt\u00f3re s\u0105 wykorzystywane do autoryzacji u\u017cytkownik\u00f3w w systemie. - <code>AuthController</code> - kontroler odpowiedzialny za logowanie (<code>/signin</code>) oraz rejestracj\u0119 u\u017cytkownik\u00f3w (<code>/signup</code>). Obs\u0142uguje \u017c\u0105dania przychodz\u0105ce z innych mikroserwis\u00f3w lub bezpo\u015brednio od klienta. - <code>Role</code> - us\u0142uga umo\u017cliwia zarz\u0105dzanie rolami u\u017cytkownik\u00f3w, takimi jak <code>ROLE_ADMIN</code>, <code>R</code>OLE_MODERATOR<code>,</code>ROLE_CLIENT`, co pozwala na precyzyjn\u0105 kontrol\u0119 dost\u0119pu w systemie.</p>"},{"location":"backend-md/user-service/#3-role-uzytkownikow-i-mechanizmy-kontroli-dostepu","title":"3. Role u\u017cytkownik\u00f3w i mechanizmy kontroli dost\u0119pu","text":"<ul> <li><code>RoleRepository</code> oraz <code>UserRole</code> - zarz\u0105dzaj\u0105 rolami u\u017cytkownik\u00f3w w bazie danych. Ka\u017cdy u\u017cytkownik mo\u017ce posiada\u0107 jedn\u0105 lub wi\u0119cej r\u00f3l, kt\u00f3re determinuj\u0105 jego uprawnienia w systemie.</li> <li><code>WebSecurityConf</code> - klasa konfiguracyjna dla Spring Security, kt\u00f3ra definiuje zasady autentykacji i autoryzacji. Na przyk\u0142ad, endpointy zwi\u0105zane z autoryzacj\u0105 (/user/auth/**) s\u0105 dost\u0119pne publicznie, natomiast inne endpointy wymagaj\u0105 autentykacji (np. dost\u0119p do danych u\u017cytkownik\u00f3w).</li> </ul>"},{"location":"backend-md/user-service/#4-repozytoria-i-dane","title":"4. Repozytoria i dane","text":"<ul> <li><code>UserRepository</code> - odpowiada za operacje na bazie danych dotycz\u0105ce u\u017cytkownik\u00f3w, takie jak wyszukiwanie u\u017cytkownik\u00f3w po nazwie czy e-mailu.</li> <li><code>RoleRepository</code> - umo\u017cliwia dost\u0119p do danych o rolach, kt\u00f3re s\u0105 przypisywane u\u017cytkownikom.</li> </ul>"},{"location":"backend-md/user-service/#5-interfejsy-komunikacyjne","title":"5. Interfejsy komunikacyjne","text":"<ul> <li><code>UserRestController</code> - zawiera endpointy, kt\u00f3re mog\u0105 by\u0107 wykorzystywane do zarz\u0105dzania u\u017cytkownikami przez inne mikroserwisy w systemie. Przyk\u0142adem jest endpoint <code>/openApi</code>, kt\u00f3ry jest dost\u0119pny tylko dla u\u017cytkownik\u00f3w posiadaj\u0105cych rol\u0119 <code>ROLE_ADMIN</code>.</li> <li><code>API Gateway</code> b\u0119dzie odpowiedzialny za przekierowanie odpowiednich \u017c\u0105da\u0144 do User Service, w zale\u017cno\u015bci od ich charakteru (np. autentykacja, rejestracja, dost\u0119p do danych u\u017cytkownik\u00f3w).</li> </ul>"},{"location":"backend-md/user-service/#6-integracja-z-innymi-mikroserwisami","title":"6. Integracja z innymi mikroserwisami","text":"<ul> <li><code>API Gateway</code> - s\u0142u\u017cy jako punkt wej\u015bcia do ca\u0142ego systemu. Przekazuje \u017c\u0105dania do odpowiednich mikroserwis\u00f3w, w tym User Service, i zapewnia, \u017ce tylko u\u017cytkownicy z odpowiednimi rolami maj\u0105 dost\u0119p do okre\u015blonych zasob\u00f3w.</li> <li><code>Garage Service</code> i inne mikroserwisy mog\u0105 wymaga\u0107 dost\u0119pu do danych u\u017cytkownik\u00f3w przechowywanych w User Service (np. w celu przypisania u\u017cytkownika do konkretnego gara\u017cu czy rozlicze\u0144).</li> </ul>"},{"location":"backend-md/user-service/#7-baza-danych-i-skrypty-inicjalizacyjne","title":"7. Baza danych i skrypty inicjalizacyjne","text":"<ul> <li><code>data.sql</code> - skrypt inicjalizuj\u0105cy baz\u0119 danych z rolami, kt\u00f3re s\u0105 dost\u0119pne w systemie, takimi jak <code>ROLE_ADMIN</code>, <code>ROLE_MODERATOR</code>, <code>ROLE_GARAGE</code>, <code>ROLE_CLIENT</code>.</li> <li><code>application.yml</code> - konfiguracja aplikacji, w tym dane dost\u0119powe do bazy danych (PostgreSQL) oraz sekrety zwi\u0105zane z JWT. Plik ten zapewnia r\u00f3wnie\u017c integracj\u0119 z innymi mikroserwisami, je\u015bli takie s\u0105 potrzebne.</li> </ul>"},{"location":"backend-md/user-service/#8-testy","title":"8. Testy","text":"<ul> <li><code>UserServiceApplicationTests.java</code> - testy jednostkowe, kt\u00f3re weryfikuj\u0105 poprawno\u015b\u0107 dzia\u0142ania aplikacji, takie jak \u0142adowanie kontekstu aplikacji. Testy s\u0105 istotne w \u015brodowisku mikroserwis\u00f3w, poniewa\u017c umo\u017cliwiaj\u0105 weryfikacj\u0119 dzia\u0142ania mikroserwisu w izolacji przed jego integracj\u0105 z reszt\u0105 systemu.</li> </ul>"},{"location":"backend-md/user-service/#podsumowanie","title":"Podsumowanie","text":"<p>User Service jest kluczow\u0105 cz\u0119\u015bci\u0105 mikroserwis\u00f3w backendowych, zarz\u0105dzaj\u0105c\u0105 u\u017cytkownikami w systemie. Dzia\u0142a w ramach wi\u0119kszego ekosystemu, gdzie inne us\u0142ugi, takie jak API Gateway oraz Garage Service, wsp\u00f3\u0142dzia\u0142aj\u0105 z ni\u0105, aby zapewni\u0107 pe\u0142n\u0105 funkcjonalno\u015b\u0107 systemu. User Service oferuje zarz\u0105dzanie  kontami u\u017cytkownik\u00f3w, autoryzacj\u0119 za pomoc\u0105 JWT, kontrol\u0119 dost\u0119pu na podstawie r\u00f3l oraz integracj\u0119 z innymi us\u0142ugami poprzez standardowe interfejsy API.</p>"},{"location":"backend-md/vehicle-service/","title":"Vehicle service","text":"<p>Vehicle Service to mikroserwis odpowiedzialny za zarz\u0105dzanie pojazdami w systemie. Jego zadaniem jest przechowywanie informacji o pojazdach, dekodowanie VIN (numer\u00f3w identyfikacyjnych pojazd\u00f3w) oraz zapewnienie odpowiednich punkt\u00f3w dost\u0119pu (API) do tych danych. Us\u0142uga ta u\u017cywa technologii Spring Boot oraz Spring Security, co umo\u017cliwia integracj\u0119 z innymi mikroserwisami, takimi jak API Gateway, oraz zapewnia odpowiednie mechanizmy bezpiecze\u0144stwa.</p>"},{"location":"backend-md/vehicle-service/#struktura-vehicle-service","title":"Struktura Vehicle Service","text":""},{"location":"backend-md/vehicle-service/#1-podstawowa-konfiguracja-i-uruchamianie-aplikacji","title":"1. Podstawowa konfiguracja i uruchamianie aplikacji","text":"<p><code>VehicleServiceApplication.java</code></p> <p>Jest to g\u0142\u00f3wna klasa uruchamiaj\u0105ca aplikacj\u0119 mikroserwisu za pomoc\u0105 Spring Boot. Umo\u017cliwia ona uruchomienie ca\u0142ego serwisu oraz integracj\u0119 z innymi mikroserwisami w systemie, takimi jak API Gateway. VehicleServiceApplication.java<pre><code>@SpringBootApplication\npublic class VehicleServiceApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(VehicleServiceApplication.class, args);\n    }\n}\n</code></pre></p>"},{"location":"backend-md/vehicle-service/#2-konfiguracja-vin-dekodera","title":"2. Konfiguracja VIN Dekodera","text":"<p><code>VinDecoderProperties.java</code></p> <p>Plik ten zawiera konfiguracj\u0119 API VIN Dekodera, czyli zewn\u0119trznej us\u0142ugi s\u0142u\u017c\u0105cej do dekodowania numer\u00f3w VIN pojazd\u00f3w. Przechowywane s\u0105 tutaj klucze API, kt\u00f3re umo\u017cliwiaj\u0105 dost\u0119p do tej zewn\u0119trznej us\u0142ugi. VinDecoderProperties.java<pre><code>@Configuration\n@ConfigurationProperties(prefix = \"vin.decoder\")\npublic class VinDecoderProperties {\n    private String apiKey;\n    private String secretKey;\n\n    // Getters and Setters\n}\n</code></pre></p>"},{"location":"backend-md/vehicle-service/#3-model-danych-pojazdow","title":"3. Model danych pojazd\u00f3w","text":"<p><code>Vehicle.java</code></p> <p>Model ten reprezentuje dane pojazdu przechowywane w bazie danych. Zawiera informacje takie jak VIN, numer rejestracyjny, marka, model, rok produkcji, pojemno\u015b\u0107 silnika, moc silnika, typ paliwa itp. Klasa ta jest powi\u0105zana z tabel\u0105 w bazie danych. Vehicle.java<pre><code>@Entity\n@Table(name = \"vehicles\")\n@Data\npublic class Vehicle {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name=\"vin\",nullable=false,updatable=false,unique=true)\n    @NotBlank(message = \"VIN cannot be blank\")\n    @Size(min = 17, max = 17, message = \"VIN must be exactly 17 characters\")\n    private String vin;\n\n    // Additional fields and annotations\n}\n</code></pre></p> <p><code>VinDecodeResponse.java</code></p> <p>Model odpowiedzi z zewn\u0119trznej us\u0142ugi dekodowania VIN. Zawiera list\u0119 obiekt\u00f3w DecodeItem,  kt\u00f3re zawieraj\u0105 szczeg\u00f3\u0142y zwi\u0105zane z pojazdem zdekodowanym na podstawie VIN. VinDecodeResponse.java<pre><code>public class VinDecodeResponse {\n    private List&lt;DecodeItem&gt; decode;\n\n    public List&lt;DecodeItem&gt; getDecode() {\n        return decode;\n    }\n\n    public void setDecode(List&lt;DecodeItem&gt; decode) {\n    this.decode = decode;\n    }\n\n    public static class DecodeItem {\n        private String label;\n        private Object value;\n        private Integer id;\n\n        // Getters and Setters\n    }\n}\n</code></pre></p>"},{"location":"backend-md/vehicle-service/#4-repozytoria-i-operacje-na-danych","title":"4. Repozytoria i operacje na danych","text":"<p><code>VehicleRepository.java</code></p> <p>Repozytorium dla modelu Vehicle. Umo\u017cliwia wykonywanie operacji na bazie danych, takich jak wyszukiwanie pojazd\u00f3w po VIN, numerze rejestracyjnym, czy nazwie u\u017cytkownika. VehicleRepository.java<pre><code>@Repository\npublic interface VehicleRepository extends JpaRepository&lt;Vehicle,Long&gt; {\n    Optional&lt;Vehicle&gt; findByVin(String vin);\n    Optional&lt;Vehicle&gt; findByRegistrationNumber(String registrationNumber);\n    List&lt;Vehicle&gt; findByUserName(String userName);\n}\n</code></pre></p>"},{"location":"backend-md/vehicle-service/#5-rest-api-i-kontrolery","title":"5. REST API i kontrolery","text":"<p><code>VehicleRestController.java</code></p> <p>Kontroler obs\u0142uguj\u0105cy \u017c\u0105dania HTTP zwi\u0105zane z pojazdami. Umo\u017cliwia dodawanie pojazd\u00f3w, wyszukiwanie po VIN, numerze rejestracyjnym oraz po nazwie u\u017cytkownika. Dodatkowo implementuje dekodowanie VIN. VehicleRestController.java<pre><code>@RestController\n@RequestMapping(\"vehicle\")\npublic class VehicleRestController {\n\n    private final VinDecoderService vinDecoderService;\n\n    private final VehicleRepository vehicleRepository;\n\n    public VehicleRestController(VinDecoderService vinDecoderService, VehicleRepository vehicleRepository) {\n\n    this.vinDecoderService = vinDecoderService;\n    this.vehicleRepository = vehicleRepository;\n    }\n\n    @PostMapping(\"/add\")\n    public ResponseEntity&lt;Vehicle&gt; create(@RequestBody Vehicle vehicle, HttpServletRequest request)  {\n        String usernameHeader = request.getHeader(\"X-Username\");\n        String idHeader = request.getHeader(\"X-Id\");\n        vehicle.setUserId(Long.parseLong(idHeader));\n        vehicle.setUserName(usernameHeader);\n        Vehicle saved = vehicleRepository.save(vehicle);\n        return ResponseEntity.ok(saved);\n    }\n\n    @GetMapping()\n    public String sayHello() {\n        return \"Hello from Vehicle Service!\";\n    }\n\n    @GetMapping(\"/decode-info/{vin}\")\n    public ResponseEntity&lt;VinDecodeResponse&gt; decodeInfo(@PathVariable(\"vin\") String vin) {\n        VinDecodeResponse response =vinDecoderService.decode(vin);\n        return ResponseEntity.ok(response);\n    }\n\n    @GetMapping(\"/searchByVin/{vin}\")\n    public ResponseEntity&lt;Vehicle&gt; searchByVin(@PathVariable(\"vin\") String vin) {\n        Optional&lt;Vehicle&gt; vehicleOpt = vehicleRepository.findByVin(vin);\n        return vehicleOpt.map(ResponseEntity::ok).orElseGet(() -&gt; ResponseEntity.notFound().build());}\n\n    @GetMapping(\"/searchByReg/{reg}\")\n    public ResponseEntity&lt;Vehicle&gt; searchByRegistrationNumber(@PathVariable(\"reg\") String reg) {\n        Optional&lt;Vehicle&gt; vehicleOpt = vehicleRepository.findByRegistrationNumber(reg);\n        return vehicleOpt.map(ResponseEntity::ok).orElseGet(() -&gt; ResponseEntity.notFound().build());}\n    @GetMapping(\"/search\")\n    public ResponseEntity&lt;List&lt;Vehicle&gt;&gt; searchByUserName(HttpServletRequest request) {\n        String usernameHeader = request.getHeader(\"X-Username\");\n        List&lt;Vehicle&gt; vehicles = vehicleRepository.findByUserName(usernameHeader);\n        if (vehicles.isEmpty()) {\n            return ResponseEntity.notFound().build();\n        } else {\n            return ResponseEntity.ok(vehicles);\n        }\n    }\n}\n</code></pre></p>"},{"location":"backend-md/vehicle-service/#6-autentykacja-i-autoryzacja","title":"6. Autentykacja i autoryzacja","text":"<p><code>AuthEntryPoint.java</code></p> <p>Klasa implementuj\u0105ca punkt wej\u015bcia dla autoryzacji. Jest u\u017cywana do zwracania odpowiedzi, gdy u\u017cytkownik nie jest autoryzowany. AuthEntryPoint.java<pre><code>@Component\npublic class AuthEntryPoint implements AuthenticationEntryPoint {\n    private static final Logger logger = LoggerFactory.getLogger(AuthEntryPoint.class);\n    @Override\n    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authExteption)\n            throws IOException {\n        logger.error(\"Unauthorized error: {}\", authExteption.getMessage());\n\n        response.setContentType(MediaType.APPLICATION_JSON_VALUE);\n        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n\n        final Map&lt;String, Object&gt; body = new HashMap&lt;&gt;();\n        body.put(\"status\", HttpServletResponse.SC_UNAUTHORIZED);\n        body.put(\"error\", \"Unauthorized\");\n        body.put(\"message\", authExteption.getMessage());\n        body.put(\"path\", request.getServletPath());\n\n        final ObjectMapper mapper = new ObjectMapper();\n        mapper.writeValue(response.getOutputStream(), body);\n    }\n}\n</code></pre></p> <p><code>AuthFilter.java</code></p> <p>Filtr, kt\u00f3ry sprawdza role u\u017cytkownika w nag\u0142\u00f3wku <code>X-Roles</code> i przypisuje odpowiednie uprawnienia w kontek\u015bcie bezpiecze\u0144stwa. AuthEntryPoint.java<pre><code>public class AuthFilter extends OncePerRequestFilter {\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n            throws ServletException, IOException {\n        String rolesHeader = request.getHeader(\"X-Roles\");\n        if (rolesHeader != null ) {\n            try {\n                List&lt;String&gt; roles = Arrays.asList(rolesHeader.split(\",\"));\n                List&lt;GrantedAuthority&gt; authorities = roles.stream()\n                    .map(role -&gt; new SimpleGrantedAuthority(role.trim()))  // Role musz\u0105 by\u0107 odpowiednio sformatowane\n                    .collect(Collectors.toList());\n\n                UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(\n                    null, null, authorities\n                );\n\n                SecurityContextHolder.getContext().setAuthentication(authentication);\n\n            } catch (Exception e) {\n                logger.error(\"Error reading roles from X-Roles header: {}\", e);\n            }\n        }\n        filterChain.doFilter(request, response);\n    }\n}\n</code></pre></p> <p><code>SecurityConfig.java</code></p> <p>Konfiguracja bezpiecze\u0144stwa, w tym ustawienie filtrowania \u017c\u0105da\u0144 oraz weryfikacja uprawnie\u0144  do poszczeg\u00f3lnych endpoint\u00f3w. SecurityConfig.java<pre><code>@Configuration\n@EnableMethodSecurity\npublic class SecurityConfig {\n    @Autowired\n    private AuthEntryPoint unauthorizedHandler;\n\n    @Bean\n    public AuthFilter authenticationFilter() {\n        return new AuthFilter();\n    }\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http.csrf(AbstractHttpConfigurer::disable)\n            .exceptionHandling(exception -&gt; exception.authenticationEntryPoint(unauthorizedHandler))\n            .sessionManagement(session -&gt; session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\n            .authorizeHttpRequests(auth -&gt;\n                auth.requestMatchers(\"/openApi/**\").permitAll()\n                .anyRequest().authenticated()\n            );\n\n        http.addFilterBefore(authenticationFilter(), UsernamePasswordAuthenticationFilter.class);\n\n        return http.build();\n    }\n}\n</code></pre></p>"},{"location":"frontend-md/client-dashboard/","title":"Client dashboard","text":"<p>Client Dashboard to panel dla klient\u00f3w, kt\u00f3rzy mog\u0105 zarz\u0105dza\u0107 swoimi pojazdami i sk\u0142ada\u0107 zapytania do warsztat\u00f3w.</p>"},{"location":"frontend-md/client-dashboard/#gowne-funkcjonalnosci","title":"G\u0142\u00f3wne funkcjonalno\u015bci","text":"<p>G\u0142\u00f3wne funkcjonalno\u015bci <code>client dashboard</code> to:</p> <ul> <li> <p>sk\u0142adanie zapyta\u0144 o naprawy/wizyty w warsztatach,</p> </li> <li> <p>podgl\u0105d statusu zg\u0142osze\u0144,</p> </li> <li> <p>zarz\u0105dzanie swoimi pojazdami (dodawanie, usuwanie, edycja),</p> </li> <li> <p>podgl\u0105d szczeg\u00f3\u0142owych informacji o pojazdach,</p> </li> <li> <p>historia zapyta\u0144.</p> </li> </ul>"},{"location":"frontend-md/client-dashboard/#struktura-katalogow","title":"Struktura katalog\u00f3w","text":"<pre><code>[name]\n\u251c\u2500\u2500 client-dashboard\n\u2502   \u251c\u2500\u2500 add-request\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx   # Formularz sk\u0142adania nowego zapytania\n\u2502   \u251c\u2500\u2500 client-info\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx   # Informacje o kliencie\n\u2502   \u251c\u2500\u2500 page.tsx       # Strona g\u0142\u00f3wna dashboardu klienta\n\u2502   \u251c\u2500\u2500 requests-list\n\u2502   \u2502   \u251c\u2500\u2500 page.tsx   # Lista zapyta\u0144 u\u017cytkownika\n\u2502   \u2502   \u251c\u2500\u2500 request-actual\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Szczeg\u00f3\u0142y aktualnego zapytania\n\u2502   \u2502   \u2514\u2500\u2500 request-history\n\u2502   \u2502       \u2514\u2500\u2500 page.tsx  # Historia zapyta\u0144\n\u2502   \u2514\u2500\u2500 vehicles\n\u2502       \u251c\u2500\u2500 add-car\n\u2502       \u2502   \u2514\u2500\u2500 page.tsx  # Formularz dodawania pojazdu\n\u2502       \u251c\u2500\u2500 page.tsx      # Lista pojazd\u00f3w\n\u2502       \u2514\u2500\u2500 show-vehicles\n\u2502           \u2514\u2500\u2500 page.tsx  # Szczeg\u00f3\u0142y pojazdu\n</code></pre>"},{"location":"frontend-md/client-dashboard/#opis-kluczowych-plikow-i-funkcji","title":"Opis kluczowych plik\u00f3w i funkcji","text":""},{"location":"frontend-md/client-dashboard/#1-strona-gowna-panelu-klienta-client-dashboardpagetsx","title":"1. Strona g\u0142\u00f3wna panelu klienta (<code>client-dashboard/page.tsx</code>)","text":"<p>Po zalogowaniu u\u017cytkownik z rol\u0105 klienta widzi ekran g\u0142\u00f3wny panelu klienta z trzema g\u0142\u00f3wnymi kafelkami:</p> <ul> <li> <p>Pojazdy \u2013 zarz\u0105dzanie dodanymi samochodami.</p> </li> <li> <p>Nowe zlecenie \u2013 zg\u0142oszenie nowej naprawy.</p> </li> <li> <p>Lista zlece\u0144 \u2013 przegl\u0105danie historii i bie\u017c\u0105cych zg\u0142osze\u0144.</p> </li> </ul> Kod odpowiedzialny za nawigacj\u0119 po dashboardzie<pre><code>const handleNavigate = (path: string) =&gt; { \n  router.push(path); // Przekierowanie do wybranego widoku\n};\n</code></pre>"},{"location":"frontend-md/client-dashboard/#2-formularz-skadania-zapytania-add-requestpagetsx","title":"2. Formularz sk\u0142adania zapytania (<code>add-request/page.tsx</code>)","text":"<p>Formularz umo\u017cliwia zg\u0142oszenie naprawy pojazdu.</p> <ul> <li> <p>Wyb\u00f3r samochodu</p> </li> <li> <p>Opis problemu</p> </li> <li> <p>Wyb\u00f3r warsztatu</p> </li> </ul> Kod obs\u0142ugi wyboru warsztatu<pre><code>const handleWorkshopSelect = (workshopId: number) =&gt; {\n  setSelectedWorkshop(workshopId);\n};\n</code></pre>"},{"location":"frontend-md/client-dashboard/#3-lista-zapytan-requests-listpagetsx","title":"3. Lista zapyta\u0144 (<code>requests-list/page.tsx</code>)","text":"<p>Pokazuje histori\u0119 oraz bie\u017c\u0105ce zg\u0142oszenia u\u017cytkownika.</p> Kod wy\u015bwietlaj\u0105cy list\u0119 zg\u0142osze\u0144<pre><code>{requests.map((request) =&gt; (\n  &lt;tr key={request.id}&gt;\n    &lt;td&gt;{request.type}&lt;/td&gt;\n    &lt;td&gt;{request.status}&lt;/td&gt;\n    &lt;td&gt;{request.workshop}&lt;/td&gt;\n  &lt;/tr&gt;\n))}\n</code></pre>"},{"location":"frontend-md/client-dashboard/#szczegoy-aktualnego-zgoszenia-request-actualpagetsx","title":"Szczeg\u00f3\u0142y aktualnego zg\u0142oszenia (<code>request-actual/page.tsx</code>)","text":"<p>Wy\u015bwietla status i szczeg\u00f3\u0142y konkretnego zg\u0142oszenia.</p> Kod wy\u015bwietlania szczeg\u00f3\u0142\u00f3w zg\u0142oszenia<pre><code>const requestDetails = async () =&gt; {\n  const response = await fetch(`/api/request/${requestId}`);\n  const data = await response.json();\n  setRequestDetails(data);\n};\n</code></pre>"},{"location":"frontend-md/client-dashboard/#5-historia-zgoszen-request-historypagetsx","title":"5. Historia zg\u0142osze\u0144 (<code>request-history/page.tsx</code>)","text":"<p>Przechowuje archiwalne zg\u0142oszenia wraz z mo\u017cliwo\u015bci\u0105 pobrania raportu PDF.</p> Kod generowania raportu<pre><code>&lt;a href={service.pdfLink} target=\"_blank\"&gt;\n  *Pobierz raport*\n&lt;/a&gt;\n</code></pre>"},{"location":"frontend-md/client-dashboard/#6-zarzadzanie-pojazdami-vehiclespagetsx","title":"6. Zarz\u0105dzanie pojazdami (<code>vehicles/page.tsx</code>)","text":"<p>Lista wszystkich pojazd\u00f3w przypisanych do u\u017cytkownika.</p> <ul> <li> <p>Dodawanie pojazdu (<code>add-car/page.tsx</code>) \u2013 u\u017cytkownik mo\u017ce doda\u0107 nowy pojazd, wpisuj\u0105c jego dane lub dekoduj\u0105c numer VIN.</p> </li> <li> <p>Podgl\u0105d szczeg\u00f3\u0142\u00f3w pojazdu (<code>show-vehicles/page.tsx</code>) \u2013 u\u017cytkownik mo\u017ce zobaczy\u0107 pe\u0142ne informacje techniczne dotycz\u0105ce pojazdu.</p> </li> </ul> Kod dekodowania VIN<pre><code>const handleDecodeVin = async () =&gt; {\nconst response = await fetch(`/api/vehicle/decode-info/${vin}`);\nconst data = await response.json();\nsetFormData({ ...formData, make: data.make, model: data.model });\n};\n</code></pre>"},{"location":"frontend-md/garage-dashboard/","title":"Garage dashboard","text":"<p>Garage Dashboard to panel dla warsztat\u00f3w, umo\u017cliwiaj\u0105cy zarz\u0105dzanie zg\u0142oszeniami i informacjami o firmie.</p>"},{"location":"frontend-md/garage-dashboard/#gowne-funkcjonalnosci","title":"G\u0142\u00f3wne funkcjonalno\u015bci","text":"<p>G\u0142\u00f3wne funkcjonalno\u015bci <code>garage dashboard</code> to:</p> <ul> <li> <p>zarz\u0105dzanie informacjami o warsztacie,</p> </li> <li> <p>przegl\u0105danie i akceptowanie zg\u0142osze\u0144,</p> </li> <li> <p>podzia\u0142 zg\u0142osze\u0144 na aktualne i archiwalne,</p> </li> <li> <p>mo\u017cliwo\u015b\u0107 generowania raport\u00f3w PDF dla zako\u0144czonych zg\u0142osze\u0144,</p> </li> <li> <p>zarz\u0105dzanie statusem zg\u0142osze\u0144 (np. \"W trakcie\", \"Zako\u0144czone\").</p> </li> </ul>"},{"location":"frontend-md/garage-dashboard/#struktura-katalogow","title":"Struktura katalog\u00f3w","text":"<pre><code>[name]\n\u251c\u2500\u2500 garage-dashboard\n\u2502   \u251c\u2500\u2500 actual\n\u2502   \u2502   \u251c\u2500\u2500 [id]\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Szczeg\u00f3\u0142y konkretnego zg\u0142oszenia\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Lista aktualnych zg\u0142osze\u0144\n\u2502   \u251c\u2500\u2500 garage-info\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Informacje o warsztacie\n\u2502   \u251c\u2500\u2500 history\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Historia zg\u0142osze\u0144\n\u2502   \u251c\u2500\u2500 page.tsx  # Strona g\u0142\u00f3wna dashboardu warsztatu\n\u2502   \u2514\u2500\u2500 pending-ticket-list\n\u2502       \u2514\u2500\u2500 page.tsx  # Lista oczekuj\u0105cych zg\u0142osze\u0144\n</code></pre>"},{"location":"frontend-md/garage-dashboard/#opis-kluczowych-plikow-i-funkcji","title":"Opis kluczowych plik\u00f3w i funkcji","text":""},{"location":"frontend-md/garage-dashboard/#1-strona-gowna-panelu-warsztatu-garage-dashboardpagetsx","title":"1. Strona g\u0142\u00f3wna panelu warsztatu (<code>garage-dashboard/page.tsx</code>)","text":"<p>Po zalogowaniu u\u017cytkownik z rol\u0105 warsztatu widzi ekran g\u0142\u00f3wny panelu, kt\u00f3ry zawiera trzy g\u0142\u00f3wne kafelki:</p> <ul> <li> <p>Nowe zg\u0142oszenia \u2013 lista zg\u0142osze\u0144 oczekuj\u0105cych na akceptacj\u0119.</p> </li> <li> <p>Aktualne zg\u0142oszenia \u2013 naprawy, kt\u00f3re s\u0105 w trakcie realizacji.</p> </li> <li> <p>Historia zg\u0142osze\u0144 \u2013 lista uko\u0144czonych us\u0142ug.</p> </li> </ul> <pre><code>const handleNavigate = (path: string) =&gt; { \n  router.push(path); // Przekierowanie do wybranego widoku\n};\n</code></pre>"},{"location":"frontend-md/garage-dashboard/#2-2-panel-nowych-zgoszen-pending-ticket-listpagetsx","title":"2. 2. Panel nowych zg\u0142osze\u0144 (<code>pending-ticket-list/page.tsx</code>)","text":"<p>Tabela z list\u0105 wszystkich zg\u0142osze\u0144 oczekuj\u0105cych na akceptacj\u0119. Ka\u017cde zg\u0142oszenie zawiera dane klienta, opis problemu oraz informacje o poje\u017adzie. Warsztat mo\u017ce zaakceptowa\u0107 zg\u0142oszenie lub je odrzuci\u0107.</p> <pre><code>const handleAccept = (id: number) =&gt; {\n  changeReportStatus(id, 'IN_PROGRESS');\n};\n</code></pre>"},{"location":"frontend-md/garage-dashboard/#3-panel-aktualnych-zgoszen-actualpagetsx","title":"3. Panel aktualnych zg\u0142osze\u0144 (<code>actual/page.tsx</code>)","text":"<p>Widok zg\u0142osze\u0144, kt\u00f3re zosta\u0142y zaakceptowane i s\u0105 w trakcie realizacji. Warsztat ma mo\u017cliwo\u015b\u0107 przej\u015bcia do szczeg\u00f3\u0142owego widoku edycji zg\u0142oszenia.</p>"},{"location":"frontend-md/garage-dashboard/#4-panel-edycji-zgoszenia-actualidpagetsx","title":"4. Panel edycji zg\u0142oszenia (<code>actual/[id]/page.tsx</code>)","text":"<p>Warsztat mo\u017ce doda\u0107 kolejne wykonane operacje, np. \u201eWymiana oleju \u2013 200 z\u0142\u201d, oraz oznaczy\u0107 zg\u0142oszenie jako zako\u0144czone.</p> <pre><code>const handleCompleteRequest = async () =&gt; {\n    const res = await fetch(`/api/garage/report/status/${reportId}?newStatus=COMPLETED`, {\n        method: 'PUT',\n        headers: { Authorization: `Bearer ${token}` },\n    });\n};\n</code></pre>"},{"location":"frontend-md/garage-dashboard/#5-panel-historii-zgoszen-historypagetsx","title":"5. Panel historii zg\u0142osze\u0144 (<code>history/page.tsx</code>)","text":"<p>Warsztat mo\u017ce przegl\u0105da\u0107 list\u0119 zako\u0144czonych zg\u0142osze\u0144. Mo\u017cliwo\u015b\u0107 generowania raportu PDF dla zako\u0144czonych us\u0142ug.</p> <pre><code>const handlePdfReport = (requestId: number) =&gt; {\n    console.log('Generowanie PDF dla zlecenia o ID:', requestId);\n};\n</code></pre>"},{"location":"frontend-md/garage-dashboard/#6-zarzadzanie-informacjami-o-warsztacie-garage-infopagetsx","title":"6. Zarz\u0105dzanie informacjami o warsztacie (garage-info/page.tsx)","text":"<p>Panel pozwala na edycj\u0119 i aktualizowanie informacji o warsztacie, takich jak dane kontaktowe, godziny otwarcia, oraz inne szczeg\u00f3\u0142y dotycz\u0105ce dzia\u0142alno\u015bci warsztatu.</p>"},{"location":"frontend-md/moderator-dashboard/","title":"Moderator dashboard","text":"<p>Moderator Dashboard to panel dla moderator\u00f3w, kt\u00f3rzy nadzoruj\u0105 procesy w systemie, weryfikuj\u0105 zg\u0142oszenia i pojazdy.</p>"},{"location":"frontend-md/moderator-dashboard/#gowne-funkcjonalnosci","title":"G\u0142\u00f3wne funkcjonalno\u015bci","text":"<p>G\u0142\u00f3wne funkcjonalno\u015bci <code>moderator dashboard</code> to:</p> <ul> <li> <p>weryfikacja zg\u0142osze\u0144 u\u017cytkownik\u00f3w,</p> </li> <li> <p>sprawdzanie i zatwierdzanie nowych pojazd\u00f3w,</p> </li> <li> <p>kontrola nad danymi w systemie.</p> </li> </ul>"},{"location":"frontend-md/moderator-dashboard/#struktura-katalogow","title":"Struktura katalog\u00f3w","text":"<pre><code>[name]\n\u251c\u2500\u2500 moderator-dashboard\n\u2502   \u251c\u2500\u2500 check-car\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Sprawdzanie pojazdu\n\u2502   \u251c\u2500\u2500 check-requests\n\u2502   \u2502   \u2514\u2500\u2500 page.tsx  # Weryfikacja zg\u0142osze\u0144\n\u2502   \u2514\u2500\u2500 page.tsx  # Strona g\u0142\u00f3wna panelu moderatora\n</code></pre>"},{"location":"frontend-md/moderator-dashboard/#opis-kluczowych-plikow-i-funkcji","title":"Opis kluczowych plik\u00f3w i funkcji","text":""},{"location":"frontend-md/moderator-dashboard/#1-strona-gowna-panelu-moderatora-moderator-dashboardpagetsx","title":"1. Strona g\u0142\u00f3wna panelu moderatora (<code>moderator-dashboard/page.tsx</code>)","text":"<p>Po zalogowaniu moderator widzi dwie g\u0142\u00f3wne opcje:</p> <ul> <li> <p>Sprawdzenie danych pojazdu \u2013 wyszukiwanie pojazdu po numerze VIN lub tablicy rejestracyjnej.</p> </li> <li> <p>Sprawdzenie pr\u00f3\u015bb o rejestracj\u0119 warsztatu \u2013 lista warsztat\u00f3w oczekuj\u0105cych na weryfikacj\u0119.</p> </li> </ul> <pre><code>const handleNavigate = (path: string) =&gt; {\n    router.push(path); // Przekierowanie do wybranego widoku\n};\n</code></pre>"},{"location":"frontend-md/moderator-dashboard/#2-wyszukiwanie-pojazdow-check-carpagetsx","title":"2. Wyszukiwanie pojazd\u00f3w (<code>check-car/page.tsx</code>)","text":"<p>Moderator mo\u017ce wyszukiwa\u0107 pojazdy po numerze VIN lub tablicy rejestracyjnej. Je\u015bli pojazd istnieje w systemie, wy\u015bwietlane s\u0105 jego dane techniczne.</p> <pre><code>const fetchVehicleInfo = async (query: string) =&gt; {\n    const response = await fetch(`/api/vehicle/search/${query}`);\n    const data = await response.json();\n    setVehicleData(data);\n};\n</code></pre>"},{"location":"frontend-md/moderator-dashboard/#3panel-przegladania-prosb-o-rejestracje-warsztatu-check-requestspagetsx","title":"3.Panel przegl\u0105dania pr\u00f3\u015bb o rejestracj\u0119 warsztatu (check-requests/page.tsx)","text":"<p>Moderator widzi list\u0119 warsztat\u00f3w oczekuj\u0105cych na zatwierdzenie. Mo\u017ce sprawdzi\u0107 dane oraz zatwierdzi\u0107 rejestracj\u0119 warsztatu. </p> <pre><code>const approveWorkshop = async (workshopId: number) =&gt; {\n    await fetch(`/api/moderator/workshop/approve/${workshopId}`, { method: 'POST' });\n};\n</code></pre>"},{"location":"main-md/api-gateway/","title":"Api gateway","text":"<p>API Gateway pe\u0142ni rol\u0119 centralnego punktu komunikacji dla mikroserwer\u00f3w systemu \"My Car Specialist\". Wszystkie us\u0142ugi z r\u00f3\u017cnych domen (gara\u017c, powiadomienia, rekomendacje, u\u017cytkownicy, pojazdy) s\u0105 po\u0142\u0105czone z API Gateway, kt\u00f3ry pe\u0142ni rol\u0119 posrednika, umo\u017cliwiaj\u0105cego wygodne komunikowanie si\u0119 mi\u0119dzy front-endem a mikroserwisami.  </p> <p>API Gateway zapewnia:  </p> <ul> <li>jednolit\u0105 struktur\u0119 API,  </li> <li>wygodny dost\u0119p do wszystkich funkcji systemu.  </li> </ul> <p>Dzi\u0119ki tej architekturze system jest bardziej skalowalny i \u0142atwiejszy w utrzymaniu.</p> <p>Funkcjonalnos\u0107 i implementacja</p> <p>Ka\u017cdy mikroserwer posiada dedykowan\u0105 klas\u0119 klient REST do komunikacji:</p> <ul> <li>RestGarageServiceClient - klienci wchodz\u0105 w interakcje z mikroserwisem gara\u017cowym,</li> <li>RestNotificationServiceClient - klienci odpowiadaj\u0105 za komunikacj\u0105 z serwisem powiadomie\u0144.</li> <li>RestRecommendationServiceClient - komunikacja z mikroserwisem rekomendacyjnym.</li> <li>RestUserServiceClient - zapewnia interakcj\u0119 z serwisem u\u017cytkownik\u00f3w.</li> <li>RestVehicleServiceClient - klient odpowiedzialny za komunikacj\u0119 z serwisem pojazd\u00f3w.</li> </ul> <p>Klienci korzystaj\u0105 z RestClint do wysy\u0142ania \u017c\u0105da\u0144 HTTP do odpowiednich mikroserwis\u00f3w. Ka\u017cdy klient jest konfigurowany za pomoc\u0105 adresu URL mikroserwisu, pobieranego z pliku application.properties.</p> <p>Ka\u017cdy mikroserwis ma przypisany kontroler REST, kt\u00f3ry obs\u0142uguje \u017c\u0105dania przychodz\u0105ce od API Gateway i deeguje je do odpowiednich klient\u00f3w:</p> <ul> <li>GarageRestController dla mikroserwisu gara\u017cowego,</li> <li>NotificationRestController dla mikroserwisu powiadomie\u0144,</li> <li>RecommendationRestController dla mikroserwisu rekomendacji,</li> <li>UserRestController dla mikroserwisu u\u017cytkownik\u00f3w,</li> <li>VehicleRestController dla mikroserwisu pojazd\u00f3w.</li> </ul> <p>Ka\u017cdy kontroler udost\u0119pnia endpoint obs\u0142uguj\u0105cy metod\u0119 GET na scie\u017cce odpowiadaj\u0105cej domenie mikroserwisu. Dodatowo API Gateway posiada punkt ko\u0144cowy /hello, kt\u00f3ry umo\u017cliwia testowanie dost\u0119pnosci us\u0142ugi i potwierdzenie dzia\u0142ania serwera API. Punkt ten jest realizowany przez metod\u0119 hello, kt\u00f3ra zawiera komunikat powitalny, umo\u017cliwiaj\u0105cy weryfikacj\u0119 dzia\u0142ania aplikacji.</p> <p>Technologie</p> <ul> <li>Spring Boot - do budowy backendu oraz mikroserwisowej komunikacji.</li> <li>Sprinf RestTemplate / RestClient - do obs\u0142ugi zapyta\u0144 HTTP.</li> <li>Spring Boot Annotations - m.in. @RestController, @Service oraz @Value do wstrzykiwania zale\u017cnosci z konfiguracji.</li> </ul> <p>Przyk\u0142ad klienta REST</p> <p>W pliku @RestGarageServiceClient.java znajduje si\u0119 implementcja klienta, kt\u00f3ry \u0142\u0105czy si\u0119 z serwisem gara\u017cowym. Jest to przyk\u0142ad jak komunikowa\u0107 si\u0119 z ka\u017cdym z mikroserwis\u00f3w:</p> RestGarageServiceClient.java<pre><code>@Service\npublic class RestGarageServiceClient {\n    private final RestClient restClient;\n\n    RestGarageServiceClient(@Value(\"${services.garage_service}\") String garageServiceUrl) {\n    this.restClient = RestClient.create(garageServiceUrl);\n}\n\n    public String getHello() {\n        return restClient.get()\n            .uri(\"garage\")\n            .retrieve()\n            .body(new ParameterizedTypeReference&lt;&gt;() {});\n    }\n}\n</code></pre> <p>Gradle Wrapper</p> <p>W projekcie znajduje si\u0119 plik gradle.bat, kt\u00f3ry umo\u017cliwia budowanie i uruchamianie projektu przy u\u017cyciu gradle Wrapper. Zapewnia on odpwoednia wersj\u0119 Gradle do pracy z projektem.</p> <p>Podsumowanie </p> <p>API Gateway pe\u0142ni kluczow\u0105 rol\u0119 w systemie \"My Car Specialist\", zarz\u0105dzaj\u0105c routingiem i ujednolicaj\u0105c dost\u0119p do r\u00f3\u017cnych mikroserwis\u00f3w. Dzi\u0119ki modlarnej strukturze (kontrolery, klienci REST), \u0142atwo jest zarz\u0105dza\u0107 kodem i rozszerza\u0107 funkcjonalnosc. Plik konfiguracujny application.properties pozwala na elastyczn\u0105 zmian\u0119 eddpoint\u00f3w mikroserwis\u00f3w, co u\u0142atwia wdra\u017canie w r\u00f3\u017cnych srodowiskach.</p>"},{"location":"main-md/garage-service/","title":"Garage service","text":"<p>Garage Service to mikroserwis  \"My Car Specialist\".</p>"}]}